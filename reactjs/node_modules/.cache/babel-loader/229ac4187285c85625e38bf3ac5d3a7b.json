{"ast":null,"code":"export const createMetrics = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n  return options => wrapSubscribeFunction(observer => {\n    if (window === null || window.PerformanceObserver === undefined) {\n      return emitNotSupportedError(observer);\n    }\n\n    const performanceObserver = new window.PerformanceObserver(entryList => observer.next(entryList.getEntries()));\n\n    try {\n      performanceObserver.observe(options);\n    } catch (err) {\n      observer.error(err);\n    }\n\n    return () => performanceObserver.disconnect();\n  });\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,aAAa,GAAoB,CAACC,qBAAD,EAAwBC,MAAxB,EAAgCC,qBAAhC,KAAyD;EACnG,OAAQC,OAAD,IACHD,qBAAqB,CAAEE,QAAD,IAAa;IAC/B,IAAIH,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACI,mBAAP,KAA+BC,SAAtD,EAAiE;MAC7D,OAAON,qBAAqB,CAACI,QAAD,CAA5B;IACH;;IAED,MAAMG,mBAAmB,GAAG,IAAIN,MAAM,CAACI,mBAAX,CAAgCG,SAAD,IAAeJ,QAAQ,CAACK,IAAT,CAAcD,SAAS,CAACE,UAAV,EAAd,CAA9C,CAA5B;;IAEA,IAAI;MACAH,mBAAmB,CAACI,OAApB,CAA4BR,OAA5B;IACH,CAFD,CAEE,OAAOS,GAAP,EAAY;MACVR,QAAQ,CAACS,KAAT,CAAeD,GAAf;IACH;;IAED,OAAO,MAAML,mBAAmB,CAACO,UAApB,EAAb;EACH,CAdoB,CADzB;AAgBH,CAjBM","names":["createMetrics","emitNotSupportedError","window","wrapSubscribeFunction","options","observer","PerformanceObserver","undefined","performanceObserver","entryList","next","getEntries","observe","err","error","disconnect"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\subscribable-things\\src\\factories\\metrics.ts"],"sourcesContent":["import { TMetricsFactory } from '../types';\n\nexport const createMetrics: TMetricsFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.PerformanceObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const performanceObserver = new window.PerformanceObserver((entryList) => observer.next(entryList.getEntries()));\n\n            try {\n                performanceObserver.observe(options);\n            } catch (err) {\n                observer.error(err);\n            }\n\n            return () => performanceObserver.disconnect();\n        });\n};\n"]},"metadata":{},"sourceType":"module"}