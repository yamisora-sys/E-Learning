{"ast":null,"code":"export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaElementAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options); // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw TypeError();\n      }\n\n      super(context, true, nativeMediaElementAudioSourceNode, null);\n      this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n    }\n\n    get mediaElement() {\n      return this._nativeMediaElementAudioSourceNode.mediaElement;\n    }\n\n  };\n};","map":{"version":3,"mappings":"AAGA,OAAO,MAAMA,4CAA4C,GAAmD,CACxGC,oBADwG,EAExGC,uCAFwG,EAGxGC,gBAHwG,EAIxGC,2BAJwG,KAKxG;EACA,OAAO,MAAMC,2BAAN,SAA0FJ,oBAA1F,CAAiH;IAIpHK,YAAYC,OAAZ,EAAwBC,OAAxB,EAAgE;MAC5D,MAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAD,CAAtC;MACA,MAAMG,iCAAiC,GAAGR,uCAAuC,CAACO,aAAD,EAAgBD,OAAhB,CAAjF,CAF4D,CAI5D;;MACA,IAAIJ,2BAA2B,CAACK,aAAD,CAA/B,EAAgD;QAC5C,MAAME,SAAS,EAAf;MACH;;MAED,MAAMJ,OAAN,EAAe,IAAf,EAAqBG,iCAArB,EAA+E,IAA/E;MAEA,KAAKE,kCAAL,GAA0CF,iCAA1C;IACH;;IAEe,IAAZG,YAAY;MACZ,OAAO,KAAKD,kCAAL,CAAwCC,YAA/C;IACH;;EApBmH,CAAxH;AAsBH,CA5BM","names":["createMediaElementAudioSourceNodeConstructor","audioNodeConstructor","createNativeMediaElementAudioSourceNode","getNativeContext","isNativeOfflineAudioContext","MediaElementAudioSourceNode","constructor","context","options","nativeContext","nativeMediaElementAudioSourceNode","TypeError","_nativeMediaElementAudioSourceNode","mediaElement"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\media-element-audio-source-node-constructor.ts"],"sourcesContent":["import { IAudioContext, IMediaElementAudioSourceNode, IMediaElementAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaElementAudioSourceNodeConstructorFactory, TNativeMediaElementAudioSourceNode } from '../types';\n\nexport const createMediaElementAudioSourceNodeConstructor: TMediaElementAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaElementAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaElementAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaElementAudioSourceNode<T> {\n        private _nativeMediaElementAudioSourceNode: TNativeMediaElementAudioSourceNode;\n\n        constructor(context: T, options: IMediaElementAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n\n            super(context, true, nativeMediaElementAudioSourceNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n\n        get mediaElement(): HTMLMediaElement {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}