{"ast":null,"code":"export const createEventTargetConstructor = wrapEventListener => {\n  return class EventTarget {\n    constructor(_nativeEventTarget) {\n      this._nativeEventTarget = _nativeEventTarget;\n      this._listeners = new WeakMap();\n    }\n\n    addEventListener(type, listener, options) {\n      if (listener !== null) {\n        let wrappedEventListener = this._listeners.get(listener);\n\n        if (wrappedEventListener === undefined) {\n          wrappedEventListener = wrapEventListener(this, listener);\n\n          if (typeof listener === 'function') {\n            this._listeners.set(listener, wrappedEventListener);\n          }\n        }\n\n        this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n      }\n    }\n\n    dispatchEvent(event) {\n      return this._nativeEventTarget.dispatchEvent(event);\n    }\n\n    removeEventListener(type, listener, options) {\n      const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n      this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n    }\n\n  };\n};","map":{"version":3,"mappings":"AAGA,OAAO,MAAMA,4BAA4B,GAAoCC,iBAAD,IAAsB;EAC9F,OAAO,MAAMC,WAAN,CAAiB;IAGpBC,YAAoBC,kBAApB,EAA0D;MAAtC;MAChB,KAAKC,UAAL,GAAkB,IAAIC,OAAJ,EAAlB;IACH;;IAEMC,gBAAgB,CACnBC,IADmB,EAEnBC,QAFmB,EAGnBC,OAHmB,EAGwB;MAE3C,IAAID,QAAQ,KAAK,IAAjB,EAAuB;QACnB,IAAIE,oBAAoB,GAAG,KAAKN,UAAL,CAAgBO,GAAhB,CAAoBH,QAApB,CAA3B;;QAEA,IAAIE,oBAAoB,KAAKE,SAA7B,EAAwC;UACpCF,oBAAoB,GAAGV,iBAAiB,CAAC,IAAD,EAAOQ,QAAP,CAAxC;;UAEA,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;YAChC,KAAKJ,UAAL,CAAgBS,GAAhB,CAAoBL,QAApB,EAA8BE,oBAA9B;UACH;QACJ;;QAED,KAAKP,kBAAL,CAAwBG,gBAAxB,CAAyCC,IAAzC,EAA+CG,oBAA/C,EAAqED,OAArE;MACH;IACJ;;IAEMK,aAAa,CAACC,KAAD,EAAa;MAC7B,OAAO,KAAKZ,kBAAL,CAAwBW,aAAxB,CAAsCC,KAAtC,CAAP;IACH;;IAEMC,mBAAmB,CACtBT,IADsB,EAEtBC,QAFsB,EAGtBC,OAHsB,EAGkB;MAExC,MAAMC,oBAAoB,GAAGF,QAAQ,KAAK,IAAb,GAAoBI,SAApB,GAAgC,KAAKR,UAAL,CAAgBO,GAAhB,CAAoBH,QAApB,CAA7D;;MAEA,KAAKL,kBAAL,CAAwBa,mBAAxB,CAA4CT,IAA5C,EAAkDG,oBAAoB,KAAKE,SAAzB,GAAqC,IAArC,GAA4CF,oBAA9F,EAAoHD,OAApH;IACH;;EAvCmB,CAAxB;AAyCH,CA1CM","names":["createEventTargetConstructor","wrapEventListener","EventTarget","constructor","_nativeEventTarget","_listeners","WeakMap","addEventListener","type","listener","options","wrappedEventListener","get","undefined","set","dispatchEvent","event","removeEventListener"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\event-target-constructor.ts"],"sourcesContent":["import { IEventTarget } from '../interfaces';\nimport { TEventHandler, TEventTargetConstructorFactory, TNativeEventTarget } from '../types';\n\nexport const createEventTargetConstructor: TEventTargetConstructorFactory = (wrapEventListener) => {\n    return class EventTarget<EventMap extends Record<string, Event>> implements IEventTarget<EventMap> {\n        private _listeners: WeakMap<EventListenerOrEventListenerObject, EventListenerOrEventListenerObject>;\n\n        constructor(private _nativeEventTarget: TNativeEventTarget) {\n            this._listeners = new WeakMap();\n        }\n\n        public addEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | AddEventListenerOptions\n        ): void {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n\n        public dispatchEvent(event: Event): boolean {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n\n        public removeEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | EventListenerOptions\n        ): void {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}