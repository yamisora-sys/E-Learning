{"ast":null,"code":"export const createPermissionState = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n  return permissionDescriptor => wrapSubscribeFunction(observer => {\n    if (window === null || window.navigator === undefined || window.navigator.permissions === undefined || window.navigator.permissions.query === undefined) {\n      return emitNotSupportedError(observer);\n    }\n\n    let isActive = true;\n\n    let unsubscribe = () => {\n      isActive = false;\n    };\n\n    window.navigator.permissions.query(permissionDescriptor).then(permissionStatus => {\n      if (isActive) {\n        observer.next(permissionStatus.state);\n      }\n\n      if (isActive) {\n        permissionStatus.onchange = () => observer.next(permissionStatus.state);\n\n        unsubscribe = () => {\n          permissionStatus.onchange = null;\n        };\n      }\n    }, err => {\n      if (isActive) {\n        observer.error(err);\n      }\n    });\n    return () => unsubscribe();\n  });\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,qBAAqB,GAA4B,CAACC,qBAAD,EAAwBC,MAAxB,EAAgCC,qBAAhC,KAAyD;EACnH,OAAQC,oBAAD,IACHD,qBAAqB,CAAEE,QAAD,IAAa;IAC/B,IACIH,MAAM,KAAK,IAAX,IACAA,MAAM,CAACI,SAAP,KAAqBC,SADrB,IAEAL,MAAM,CAACI,SAAP,CAAiBE,WAAjB,KAAiCD,SAFjC,IAGAL,MAAM,CAACI,SAAP,CAAiBE,WAAjB,CAA6BC,KAA7B,KAAuCF,SAJ3C,EAKE;MACE,OAAON,qBAAqB,CAACI,QAAD,CAA5B;IACH;;IAED,IAAIK,QAAQ,GAAG,IAAf;;IACA,IAAIC,WAAW,GAAG,MAAK;MACnBD,QAAQ,GAAG,KAAX;IACH,CAFD;;IAIAR,MAAM,CAACI,SAAP,CAAiBE,WAAjB,CAA6BC,KAA7B,CAAmCL,oBAAnC,EAAyDQ,IAAzD,CACKC,gBAAD,IAAqB;MACjB,IAAIH,QAAJ,EAAc;QACVL,QAAQ,CAACS,IAAT,CAAcD,gBAAgB,CAACE,KAA/B;MACH;;MAED,IAAIL,QAAJ,EAAc;QACVG,gBAAgB,CAACG,QAAjB,GAA4B,MAAMX,QAAQ,CAACS,IAAT,CAAcD,gBAAgB,CAACE,KAA/B,CAAlC;;QAEAJ,WAAW,GAAG,MAAK;UACfE,gBAAgB,CAACG,QAAjB,GAA4B,IAA5B;QACH,CAFD;MAGH;IACJ,CAbL,EAcKC,GAAD,IAAQ;MACJ,IAAIP,QAAJ,EAAc;QACVL,QAAQ,CAACa,KAAT,CAAeD,GAAf;MACH;IACJ,CAlBL;IAqBA,OAAO,MAAMN,WAAW,EAAxB;EACH,CArCoB,CADzB;AAuCH,CAxCM","names":["createPermissionState","emitNotSupportedError","window","wrapSubscribeFunction","permissionDescriptor","observer","navigator","undefined","permissions","query","isActive","unsubscribe","then","permissionStatus","next","state","onchange","err","error"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\subscribable-things\\src\\factories\\permission-state.ts"],"sourcesContent":["import { TPermissionStateFactory } from '../types';\n\nexport const createPermissionState: TPermissionStateFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (permissionDescriptor) =>\n        wrapSubscribeFunction((observer) => {\n            if (\n                window === null ||\n                window.navigator === undefined ||\n                window.navigator.permissions === undefined ||\n                window.navigator.permissions.query === undefined\n            ) {\n                return emitNotSupportedError(observer);\n            }\n\n            let isActive = true;\n            let unsubscribe = () => {\n                isActive = false;\n            };\n\n            window.navigator.permissions.query(permissionDescriptor).then(\n                (permissionStatus) => {\n                    if (isActive) {\n                        observer.next(permissionStatus.state);\n                    }\n\n                    if (isActive) {\n                        permissionStatus.onchange = () => observer.next(permissionStatus.state);\n\n                        unsubscribe = () => {\n                            permissionStatus.onchange = null;\n                        };\n                    }\n                },\n                (err) => {\n                    if (isActive) {\n                        observer.error(err);\n                    }\n                }\n            );\n\n            return () => unsubscribe();\n        });\n};\n"]},"metadata":{},"sourceType":"module"}