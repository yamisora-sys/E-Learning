{"ast":null,"code":"export const createAddAudioParamConnections = audioParamConnectionsStore => {\n  return (audioParam, audioParamRenderer) => {\n    audioParamConnectionsStore.set(audioParam, {\n      activeInputs: new Set(),\n      passiveInputs: new WeakMap(),\n      renderer: audioParamRenderer\n    });\n  };\n};","map":{"version":3,"mappings":"AAGA,OAAO,MAAMA,8BAA8B,GAAsCC,0BAAD,IAA+B;EAC3G,OAAO,CACHC,UADG,EAEHC,kBAFG,KAGH;IACAF,0BAA0B,CAACG,GAA3B,CAA+BF,UAA/B,EAA2C;MAAEG,YAAY,EAAE,IAAIC,GAAJ,EAAhB;MAA2BC,aAAa,EAAE,IAAIC,OAAJ,EAA1C;MAAyDC,QAAQ,EAAEN;IAAnE,CAA3C;EACH,CALD;AAMH,CAPM","names":["createAddAudioParamConnections","audioParamConnectionsStore","audioParam","audioParamRenderer","set","activeInputs","Set","passiveInputs","WeakMap","renderer"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\add-audio-param-connections.ts"],"sourcesContent":["import { IAudioParam, IAudioParamRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAddAudioParamConnectionsFactory, TContext } from '../types';\n\nexport const createAddAudioParamConnections: TAddAudioParamConnectionsFactory = (audioParamConnectionsStore) => {\n    return <T extends TContext>(\n        audioParam: IAudioParam,\n        audioParamRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioParamRenderer : null\n    ) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n"]},"metadata":{},"sourceType":"module"}