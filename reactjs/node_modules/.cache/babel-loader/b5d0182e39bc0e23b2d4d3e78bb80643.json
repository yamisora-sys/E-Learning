{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) : typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, function (exports, _slicedToArray, _classCallCheck, _createClass) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n\n  var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n\n  var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n\n  var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n  var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n    return {\n      endTime: endTime,\n      insertTime: insertTime,\n      type: 'exponentialRampToValue',\n      value: value\n    };\n  };\n\n  var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n    return {\n      endTime: endTime,\n      insertTime: insertTime,\n      type: 'linearRampToValue',\n      value: value\n    };\n  };\n\n  var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n    return {\n      startTime: startTime,\n      type: 'setValue',\n      value: value\n    };\n  };\n\n  var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n    return {\n      duration: duration,\n      startTime: startTime,\n      type: 'setValueCurve',\n      values: values\n    };\n  };\n\n  var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n    var startTime = _ref.startTime,\n        target = _ref.target,\n        timeConstant = _ref.timeConstant;\n    return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n  };\n\n  var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n    return automationEvent.type === 'exponentialRampToValue';\n  };\n\n  var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n    return automationEvent.type === 'linearRampToValue';\n  };\n\n  var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n    return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n  };\n\n  var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n    return automationEvent.type === 'setValue';\n  };\n\n  var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n    return automationEvent.type === 'setValueCurve';\n  };\n\n  var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n    var automationEvent = automationEvents[index];\n    return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n  };\n\n  var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n    return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n  };\n\n  var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n    return automationEvent.type === 'cancelAndHold';\n  };\n\n  var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n    return automationEvent.type === 'cancelScheduledValues';\n  };\n\n  var getEventTime = function getEventTime(automationEvent) {\n    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n      return automationEvent.cancelTime;\n    }\n\n    if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n      return automationEvent.endTime;\n    }\n\n    return automationEvent.startTime;\n  };\n\n  var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n    var endTime = _ref.endTime,\n        value = _ref.value;\n\n    if (valueAtStartTime === value) {\n      return value;\n    }\n\n    if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n      return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n    }\n\n    return 0;\n  };\n\n  var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n    var endTime = _ref.endTime,\n        value = _ref.value;\n    return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n  };\n\n  var interpolateValue = function interpolateValue(values, theoreticIndex) {\n    var lowerIndex = Math.floor(theoreticIndex);\n    var upperIndex = Math.ceil(theoreticIndex);\n\n    if (lowerIndex === upperIndex) {\n      return values[lowerIndex];\n    }\n\n    return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n  };\n\n  var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n    var duration = _ref.duration,\n        startTime = _ref.startTime,\n        values = _ref.values;\n    var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n    return interpolateValue(values, theoreticIndex);\n  };\n\n  var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n    return automationEvent.type === 'setTarget';\n  };\n\n  var AutomationEventList = /*#__PURE__*/function (_Symbol$iterator) {\n    function AutomationEventList(defaultValue) {\n      _classCallCheck__default[\"default\"](this, AutomationEventList);\n\n      this._automationEvents = [];\n      this._currenTime = 0;\n      this._defaultValue = defaultValue;\n    }\n\n    _createClass__default[\"default\"](AutomationEventList, [{\n      key: _Symbol$iterator,\n      value: function value() {\n        return this._automationEvents[Symbol.iterator]();\n      }\n    }, {\n      key: \"add\",\n      value: function add(automationEvent) {\n        var eventTime = getEventTime(automationEvent);\n\n        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n              return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n            }\n\n            return getEventTime(currentAutomationEvent) >= eventTime;\n          });\n\n          var removedAutomationEvent = this._automationEvents[index];\n\n          if (index !== -1) {\n            this._automationEvents = this._automationEvents.slice(0, index);\n          }\n\n          if (isCancelAndHoldAutomationEvent(automationEvent)) {\n            var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n            if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n              if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                throw new Error('The internal list is malformed.');\n              }\n\n              var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n              var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n              var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n              var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n              this._automationEvents.push(truncatedAutomationEvent);\n            }\n\n            if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n              this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n            }\n\n            if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n              this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n            }\n          }\n        } else {\n          var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > eventTime;\n          });\n\n          var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n          if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n            return false;\n          }\n\n          var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n          if (_index === -1) {\n            this._automationEvents.push(persistentAutomationEvent);\n          } else {\n            if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n              return false;\n            }\n\n            this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n          }\n        }\n\n        return true;\n      }\n    }, {\n      key: \"flush\",\n      value: function flush(time) {\n        var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n          return getEventTime(currentAutomationEvent) > time;\n        });\n\n        if (index > 1) {\n          var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n          var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n          if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n            remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n          }\n\n          this._automationEvents = remainingAutomationEvents;\n        }\n      }\n    }, {\n      key: \"getValue\",\n      value: function getValue(time) {\n        if (this._automationEvents.length === 0) {\n          return this._defaultValue;\n        }\n\n        var indexOfNextEvent = this._automationEvents.findIndex(function (automationEvent) {\n          return getEventTime(automationEvent) > time;\n        });\n\n        var nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n        var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n        var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n\n        if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n          return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n        }\n\n        if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n          return currentAutomationEvent.value;\n        }\n\n        if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n          if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n            return getValueCurveValueAtTime(time, currentAutomationEvent);\n          }\n\n          return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n        }\n\n        if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n          return currentAutomationEvent.value;\n        }\n\n        if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n          var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf2 = _slicedToArray__default[\"default\"](_getEndTimeAndValueOf, 2),\n              startTime = _getEndTimeAndValueOf2[0],\n              value = _getEndTimeAndValueOf2[1];\n\n          return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n\n        if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n          var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf4 = _slicedToArray__default[\"default\"](_getEndTimeAndValueOf3, 2),\n              _startTime = _getEndTimeAndValueOf4[0],\n              _value = _getEndTimeAndValueOf4[1];\n\n          return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n        }\n\n        return this._defaultValue;\n      }\n    }]);\n\n    return AutomationEventList;\n  }(Symbol.iterator);\n\n  var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n    return {\n      cancelTime: cancelTime,\n      type: 'cancelAndHold'\n    };\n  };\n\n  var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n    return {\n      cancelTime: cancelTime,\n      type: 'cancelScheduledValues'\n    };\n  };\n\n  var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n    return {\n      endTime: endTime,\n      type: 'exponentialRampToValue',\n      value: value\n    };\n  };\n\n  var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n    return {\n      endTime: endTime,\n      type: 'linearRampToValue',\n      value: value\n    };\n  };\n\n  var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n    return {\n      startTime: startTime,\n      target: target,\n      timeConstant: timeConstant,\n      type: 'setTarget'\n    };\n  };\n\n  exports.AutomationEventList = AutomationEventList;\n  exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n  exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n  exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n  exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n  exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n  exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n  exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["global","factory","exports","module","require","define","amd","globalThis","self","automationEvents","_slicedToArray","_classCallCheck","_createClass","_interopDefaultLegacy","e","_slicedToArray__default","_classCallCheck__default","_createClass__default","createExtendedExponentialRampToValueAutomationEvent","value","endTime","insertTime","type","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","_ref","target","timeConstant","Math","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","index","defaultValue","undefined","length","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","pow","getLinearRampValueAtTime","interpolateValue","theoreticIndex","lowerIndex","floor","upperIndex","ceil","getValueCurveValueAtTime","isSetTargetAutomationEvent","AutomationEventList","_Symbol$iterator","_automationEvents","_currenTime","_defaultValue","key","Symbol","iterator","add","eventTime","findIndex","removedAutomationEvent","slice","lastAutomationEvent","Error","startValue","truncatedAutomationEvent","push","getValue","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","splice","flush","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","indexOfNextEvent","indexOfCurrentEvent","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","Object","defineProperty"],"sources":["D:/programer/xampp/htdocs/E-Learning/reactjs/node_modules/automation-events/build/es5/bundle.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function (_Symbol$iterator) {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck__default[\"default\"](this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass__default[\"default\"](AutomationEventList, [{\n        key: _Symbol$iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n              }\n\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var indexOfNextEvent = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n          var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n          var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray__default[\"default\"](_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray__default[\"default\"](_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }(Symbol.iterator);\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}