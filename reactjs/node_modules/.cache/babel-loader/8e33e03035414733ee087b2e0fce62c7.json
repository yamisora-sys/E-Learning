{"ast":null,"code":"export const createOn = wrapSubscribeFunction => {\n  return (target, type, options) => wrapSubscribeFunction(observer => {\n    const listener = event => observer.next(event);\n\n    target.addEventListener(type, listener, options);\n    return () => target.removeEventListener(type, listener, options);\n  });\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,QAAQ,GAAgBC,qBAAD,IAA0B;EAC1D,OAAO,CAACC,MAAD,EAASC,IAAT,EAAeC,OAAf,KACHH,qBAAqB,CAAEI,QAAD,IAAa;IAC/B,MAAMC,QAAQ,GAAkCC,KAAD,IAAWF,QAAQ,CAACG,IAAT,CAAsDD,KAAtD,CAA1D;;IAEAL,MAAM,CAACO,gBAAP,CAAwBN,IAAxB,EAA8BG,QAA9B,EAAwCF,OAAxC;IAEA,OAAO,MAAMF,MAAM,CAACQ,mBAAP,CAA2BP,IAA3B,EAAiCG,QAAjC,EAA2CF,OAA3C,CAAb;EACH,CANoB,CADzB;AAQH,CATM","names":["createOn","wrapSubscribeFunction","target","type","options","observer","listener","event","next","addEventListener","removeEventListener"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\subscribable-things\\src\\factories\\on.ts"],"sourcesContent":["import { TEventHandler, TEventType, TOnFactory } from '../types';\n\nexport const createOn: TOnFactory = (wrapSubscribeFunction) => {\n    return (target, type, options) =>\n        wrapSubscribeFunction((observer) => {\n            const listener: TEventHandler<typeof target> = (event) => observer.next(<TEventType<typeof target, typeof type>>event);\n\n            target.addEventListener(type, listener, options);\n\n            return () => target.removeEventListener(type, listener, options);\n        });\n};\n"]},"metadata":{},"sourceType":"module"}