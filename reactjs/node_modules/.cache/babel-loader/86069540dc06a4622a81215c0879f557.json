{"ast":null,"code":"export class ReadOnlyMap {\n  constructor(parameters) {\n    this._map = new Map(parameters);\n  }\n\n  get size() {\n    return this._map.size;\n  }\n\n  entries() {\n    return this._map.entries();\n  }\n\n  forEach(callback) {\n    let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n  }\n\n  get(name) {\n    return this._map.get(name);\n  }\n\n  has(name) {\n    return this._map.has(name);\n  }\n\n  keys() {\n    return this._map.keys();\n  }\n\n  values() {\n    return this._map.values();\n  }\n\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,WAAP,CAAkB;EAGpBC,YAAYC,UAAZ,EAAgC;IAC5B,KAAKC,IAAL,GAAY,IAAIC,GAAJ,CAAQF,UAAR,CAAZ;EACH;;EAEO,IAAJG,IAAI;IACJ,OAAO,KAAKF,IAAL,CAAUE,IAAjB;EACH;;EAEMC,OAAO;IACV,OAAO,KAAKH,IAAL,CAAUG,OAAV,EAAP;EACH;;EAEMC,OAAO,CAACC,QAAD,EAAwF;IAAA,IAAnBC,OAAmB,uEAAJ,IAAI;IAClG,OAAO,KAAKN,IAAL,CAAUI,OAAV,CAAkB,CAACG,KAAD,EAAWC,GAAX,KAAsBH,QAAQ,CAACI,IAAT,CAAcH,OAAd,EAAuBC,KAAvB,EAA8BC,GAA9B,EAAmC,IAAnC,CAAxC,CAAP;EACH;;EAEME,GAAG,CAACC,IAAD,EAAQ;IACd,OAAO,KAAKX,IAAL,CAAUU,GAAV,CAAcC,IAAd,CAAP;EACH;;EAEMC,GAAG,CAACD,IAAD,EAAQ;IACd,OAAO,KAAKX,IAAL,CAAUY,GAAV,CAAcD,IAAd,CAAP;EACH;;EAEME,IAAI;IACP,OAAO,KAAKb,IAAL,CAAUa,IAAV,EAAP;EACH;;EAEMC,MAAM;IACT,OAAO,KAAKd,IAAL,CAAUc,MAAV,EAAP;EACH;;AAjCmB","names":["ReadOnlyMap","constructor","parameters","_map","Map","size","entries","forEach","callback","thisArg","value","key","call","get","name","has","keys","values"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\read-only-map.ts"],"sourcesContent":["import { IReadOnlyMap } from './interfaces';\n\nexport class ReadOnlyMap<T, U> implements IReadOnlyMap<T, U> {\n    private _map: Map<T, U>;\n\n    constructor(parameters: [T, U][]) {\n        this._map = new Map(parameters);\n    }\n\n    get size(): number {\n        return this._map.size;\n    }\n\n    public entries(): IterableIterator<[T, U]> {\n        return this._map.entries();\n    }\n\n    public forEach(callback: (audioParam: U, name: T, map: ReadOnlyMap<T, U>) => void, thisArg: any = null): void {\n        return this._map.forEach((value: U, key: T) => callback.call(thisArg, value, key, this));\n    }\n\n    public get(name: T): undefined | U {\n        return this._map.get(name);\n    }\n\n    public has(name: T): boolean {\n        return this._map.has(name);\n    }\n\n    public keys(): IterableIterator<T> {\n        return this._map.keys();\n    }\n\n    public values(): IterableIterator<U> {\n        return this._map.values();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}