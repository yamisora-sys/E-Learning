{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = createNativePannerNodeFaker => {\n  return (nativeContext, options) => {\n    const nativePannerNode = nativeContext.createPanner(); // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n\n    if (nativePannerNode.orientationX === undefined) {\n      return createNativePannerNodeFaker(nativeContext, options);\n    }\n\n    assignNativeAudioNodeOptions(nativePannerNode, options);\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n    assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n    assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n    return nativePannerNode;\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,oCAAT,QAAqD,uDAArD;AACA,SAASC,2BAAT,QAA4C,4CAA5C;AACA,SAASC,4BAAT,QAA6C,6CAA7C;AAGA,OAAO,MAAMC,6BAA6B,GAAqCC,2BAAD,IAAgC;EAC1G,OAAO,CAACC,aAAD,EAAgBC,OAAhB,KAA2B;IAC9B,MAAMC,gBAAgB,GAAGF,aAAa,CAACG,YAAd,EAAzB,CAD8B,CAG9B;;IACA,IAAID,gBAAgB,CAACE,YAAjB,KAAkCC,SAAtC,EAAiD;MAC7C,OAAON,2BAA2B,CAACC,aAAD,EAAgBC,OAAhB,CAAlC;IACH;;IAEDJ,4BAA4B,CAACK,gBAAD,EAAmBD,OAAnB,CAA5B;IAEAN,oCAAoC,CAACO,gBAAD,EAAmBD,OAAnB,EAA4B,cAA5B,CAApC;IACAN,oCAAoC,CAACO,gBAAD,EAAmBD,OAAnB,EAA4B,cAA5B,CAApC;IACAN,oCAAoC,CAACO,gBAAD,EAAmBD,OAAnB,EAA4B,cAA5B,CAApC;IACAN,oCAAoC,CAACO,gBAAD,EAAmBD,OAAnB,EAA4B,WAA5B,CAApC;IACAN,oCAAoC,CAACO,gBAAD,EAAmBD,OAAnB,EAA4B,WAA5B,CAApC;IACAN,oCAAoC,CAACO,gBAAD,EAAmBD,OAAnB,EAA4B,WAA5B,CAApC;IAEAL,2BAA2B,CAACM,gBAAD,EAAmBD,OAAnB,EAA4B,gBAA5B,CAA3B;IACAL,2BAA2B,CAACM,gBAAD,EAAmBD,OAAnB,EAA4B,gBAA5B,CAA3B;IACAL,2BAA2B,CAACM,gBAAD,EAAmBD,OAAnB,EAA4B,eAA5B,CAA3B;IACAL,2BAA2B,CAACM,gBAAD,EAAmBD,OAAnB,EAA4B,eAA5B,CAA3B;IACAL,2BAA2B,CAACM,gBAAD,EAAmBD,OAAnB,EAA4B,aAA5B,CAA3B;IACAL,2BAA2B,CAACM,gBAAD,EAAmBD,OAAnB,EAA4B,cAA5B,CAA3B;IACAL,2BAA2B,CAACM,gBAAD,EAAmBD,OAAnB,EAA4B,aAA5B,CAA3B;IACAL,2BAA2B,CAACM,gBAAD,EAAmBD,OAAnB,EAA4B,eAA5B,CAA3B;IAEA,OAAOC,gBAAP;EACH,CA3BD;AA4BH,CA7BM","names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOption","assignNativeAudioNodeOptions","createNativePannerNodeFactory","createNativePannerNodeFaker","nativeContext","options","nativePannerNode","createPanner","orientationX","undefined"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\native-panner-node-factory.ts"],"sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativePannerNodeFactoryFactory } from '../types';\n\nexport const createNativePannerNodeFactory: TNativePannerNodeFactoryFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n\n        return nativePannerNode;\n    };\n};\n"]},"metadata":{},"sourceType":"module"}