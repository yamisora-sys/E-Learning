{"ast":null,"code":"import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\n\nexport * from './interfaces/index';\nexport * from './types/index';\nconst ONGOING_REQUESTS = new WeakMap();\n\nconst createOrGetOngoingRequests = sender => {\n  if (ONGOING_REQUESTS.has(sender)) {\n    // @todo TypeScript needs to be convinced that has() works as expected.\n    return ONGOING_REQUESTS.get(sender);\n  }\n\n  const ongoingRequests = new Map();\n  ONGOING_REQUESTS.set(sender, ongoingRequests);\n  return ongoingRequests;\n};\n\nexport const createBroker = brokerImplementation => {\n  const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n  return sender => {\n    const ongoingRequests = createOrGetOngoingRequests(sender);\n    sender.addEventListener('message', _ref => {\n      let {\n        data: message\n      } = _ref;\n      const {\n        id\n      } = message;\n\n      if (id !== null && ongoingRequests.has(id)) {\n        const {\n          reject,\n          resolve\n        } = ongoingRequests.get(id);\n        ongoingRequests.delete(id);\n\n        if (message.error === undefined) {\n          resolve(message.result);\n        } else {\n          reject(new Error(message.error.message));\n        }\n      }\n    });\n\n    if (isMessagePort(sender)) {\n      sender.start();\n    }\n\n    const call = function (method) {\n      let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      let transferables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      return new Promise((resolve, reject) => {\n        const id = generateUniqueNumber(ongoingRequests);\n        ongoingRequests.set(id, {\n          reject,\n          resolve\n        });\n\n        if (params === null) {\n          sender.postMessage({\n            id,\n            method\n          }, transferables);\n        } else {\n          sender.postMessage({\n            id,\n            method,\n            params\n          }, transferables);\n        }\n      });\n    };\n\n    const notify = function (method, params) {\n      let transferables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      sender.postMessage({\n        id: null,\n        method,\n        params\n      }, transferables);\n    };\n\n    let functions = {};\n\n    for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n      functions = { ...functions,\n        [key]: handler({\n          call,\n          notify\n        })\n      };\n    }\n\n    return { ...functions\n    };\n  };\n};","map":{"version":3,"mappings":"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","names":["generateUniqueNumber","isMessagePort","extendBrokerImplementation","ONGOING_REQUESTS","WeakMap","createOrGetOngoingRequests","sender","has","get","ongoingRequests","Map","set","createBroker","brokerImplementation","fullBrokerImplementation","addEventListener","data","message","id","reject","resolve","delete","error","undefined","result","Error","start","call","method","params","transferables","Promise","postMessage","notify","functions","key","handler","Object","entries"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\broker-factory\\src\\module.ts"],"sourcesContent":["import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { IWorkerDefinition, IWorkerErrorMessage, IWorkerResultMessage } from 'worker-factory';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\nimport { IBrokerDefinition, IDefaultBrokerDefinition, IWorkerEvent } from './interfaces';\nimport { TBrokerImplementation } from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst ONGOING_REQUESTS = new WeakMap<MessagePort | Worker, Map<number, { reject: Function; resolve: Function }>>();\n\nconst createOrGetOngoingRequests = (sender: MessagePort | Worker): Map<number, { reject: Function; resolve: Function }> => {\n    if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return <Map<number, { reject: Function; resolve: Function }>>ONGOING_REQUESTS.get(sender);\n    }\n\n    const ongoingRequests: Map<number, { reject: Function; resolve: Function }> = new Map();\n\n    ONGOING_REQUESTS.set(sender, ongoingRequests);\n\n    return ongoingRequests;\n};\n\nexport const createBroker = <T extends IBrokerDefinition, U extends IWorkerDefinition>(\n    brokerImplementation: TBrokerImplementation<T, U>\n): ((sender: MessagePort | Worker) => T & IDefaultBrokerDefinition) => {\n    const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n\n    return (sender: MessagePort | Worker) => {\n        const ongoingRequests = createOrGetOngoingRequests(sender);\n\n        sender.addEventListener('message', <EventListener>(({ data: message }: IWorkerEvent) => {\n            const { id } = message;\n\n            if (id !== null && ongoingRequests.has(id)) {\n                const { reject, resolve } = <{ reject: Function; resolve: Function }>ongoingRequests.get(id);\n\n                ongoingRequests.delete(id);\n\n                if ((<IWorkerErrorMessage>message).error === undefined) {\n                    resolve((<IWorkerResultMessage>message).result);\n                } else {\n                    reject(new Error((<IWorkerErrorMessage>message).error.message));\n                }\n            }\n        }));\n\n        if (isMessagePort(sender)) {\n            sender.start();\n        }\n\n        const call = <V extends keyof U>(method: V, params: U[V]['params'] = null, transferables: U[V]['transferables'] = []) => {\n            return new Promise<U[V]['response']['result']>((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n\n                ongoingRequests.set(id, { reject, resolve });\n\n                if (params === null) {\n                    sender.postMessage({ id, method }, <Transferable[]>transferables);\n                } else {\n                    sender.postMessage({ id, method, params }, <Transferable[]>transferables);\n                }\n            });\n        };\n        const notify = <V extends keyof U>(method: V, params: U[V]['params'], transferables: U[V]['transferables'] = []) => {\n            sender.postMessage({ id: null, method, params }, <Transferable[]>transferables);\n        };\n\n        let functions: object = {};\n\n        for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n            functions = { ...functions, [key]: handler({ call, notify }) };\n        }\n\n        return <T & IDefaultBrokerDefinition>{ ...functions };\n    };\n};\n"]},"metadata":{},"sourceType":"module"}