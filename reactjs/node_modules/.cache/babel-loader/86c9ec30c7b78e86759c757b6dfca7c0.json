{"ast":null,"code":"export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n  return anything => {\n    const nativeContext = contextStore.get(anything);\n    return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n  };\n};","map":{"version":3,"mappings":"AAGA,OAAO,MAAMA,8BAA8B,GAAqC,CAACC,YAAD,EAAeC,2BAAf,KAA8C;EAC1H,OAAQC,QAAD,IAA0G;IAC7G,MAAMC,aAAa,GAAGH,YAAY,CAACI,GAAb,CAAsBF,QAAtB,CAAtB;IAEA,OAAOD,2BAA2B,CAACE,aAAD,CAA3B,IAA8CF,2BAA2B,CAACC,QAAD,CAAhF;EACH,CAJD;AAKH,CANM","names":["createIsAnyOfflineAudioContext","contextStore","isNativeOfflineAudioContext","anything","nativeContext","get"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\is-any-offline-audio-context.ts"],"sourcesContent":["import { IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TIsAnyOfflineAudioContextFactory, TNativeOfflineAudioContext } from '../types';\n\nexport const createIsAnyOfflineAudioContext: TIsAnyOfflineAudioContextFactory = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything): anything is IMinimalOfflineAudioContext | IOfflineAudioContext | TNativeOfflineAudioContext => {\n        const nativeContext = contextStore.get(<any>anything);\n\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n"]},"metadata":{},"sourceType":"module"}