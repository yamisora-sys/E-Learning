{"ast":null,"code":"import { createBroker } from 'broker-factory';\nimport { addUniqueNumber } from 'fast-unique-numbers';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\n\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderIds = new Set();\nexport const wrap = createBroker({\n  encode: _ref => {\n    let {\n      call\n    } = _ref;\n    return async (encoderId, timeslice) => {\n      const arrayBuffers = await call('encode', {\n        encoderId,\n        timeslice\n      });\n      encoderIds.delete(encoderId);\n      return arrayBuffers;\n    };\n  },\n  instantiate: _ref2 => {\n    let {\n      call\n    } = _ref2;\n    return async (mimeType, sampleRate) => {\n      const encoderId = addUniqueNumber(encoderIds);\n      const port = await call('instantiate', {\n        encoderId,\n        mimeType,\n        sampleRate\n      });\n      return {\n        encoderId,\n        port\n      };\n    };\n  },\n  register: _ref3 => {\n    let {\n      call\n    } = _ref3;\n    return port => {\n      return call('register', {\n        port\n      }, [port]);\n    };\n  }\n});\nexport const load = url => {\n  const worker = new Worker(url);\n  return wrap(worker);\n};","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAKA;;;;;AAIA,cAAc,oBAAd;AACA,cAAc,eAAd;AAEA,MAAMC,UAAU,GAAgB,IAAIC,GAAJ,EAAhC;AAEA,OAAO,MAAMC,IAAI,GAAmCJ,YAAY,CAAuE;EACnIK,MAAM,EAAE,QAAa;IAAA,IAAZ;MAAEC;IAAF,CAAY;IACjB,OAAO,OAAOC,SAAP,EAAkBC,SAAlB,KAA+B;MAClC,MAAMC,YAAY,GAAG,MAAMH,IAAI,CAAC,QAAD,EAAW;QAAEC,SAAF;QAAaC;MAAb,CAAX,CAA/B;MAEAN,UAAU,CAACQ,MAAX,CAAkBH,SAAlB;MAEA,OAAOE,YAAP;IACH,CAND;EAOH,CATkI;EAUnIE,WAAW,EAAE,SAAa;IAAA,IAAZ;MAAEL;IAAF,CAAY;IACtB,OAAO,OAAOM,QAAP,EAAiBC,UAAjB,KAA+B;MAClC,MAAMN,SAAS,GAAGN,eAAe,CAACC,UAAD,CAAjC;MACA,MAAMY,IAAI,GAAG,MAAMR,IAAI,CAAC,aAAD,EAAgB;QAAEC,SAAF;QAAaK,QAAb;QAAuBC;MAAvB,CAAhB,CAAvB;MAEA,OAAO;QAAEN,SAAF;QAAaO;MAAb,CAAP;IACH,CALD;EAMH,CAjBkI;EAkBnIC,QAAQ,EAAE,SAAa;IAAA,IAAZ;MAAET;IAAF,CAAY;IACnB,OAAQQ,IAAD,IAAS;MACZ,OAAOR,IAAI,CAAC,UAAD,EAAa;QAAEQ;MAAF,CAAb,EAAuB,CAACA,IAAD,CAAvB,CAAX;IACH,CAFD;EAGH;AAtBkI,CAAvE,CAAzD;AAyBP,OAAO,MAAME,IAAI,GAAmCC,GAAD,IAAgB;EAC/D,MAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAWF,GAAX,CAAf;EAEA,OAAOb,IAAI,CAACc,MAAD,CAAX;AACH,CAJM","names":["createBroker","addUniqueNumber","encoderIds","Set","wrap","encode","call","encoderId","timeslice","arrayBuffers","delete","instantiate","mimeType","sampleRate","port","register","load","url","worker","Worker"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\media-encoder-host-broker\\src\\module.ts"],"sourcesContent":["import { createBroker } from 'broker-factory';\nimport { addUniqueNumber } from 'fast-unique-numbers';\nimport { TMediaEncoderHostWorkerDefinition } from 'media-encoder-host-worker';\nimport { IMediaEncoderHostBrokerDefinition } from './interfaces';\nimport { TMediaEncoderHostBrokerLoader, TMediaEncoderHostBrokerWrapper } from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst encoderIds: Set<number> = new Set();\n\nexport const wrap: TMediaEncoderHostBrokerWrapper = createBroker<IMediaEncoderHostBrokerDefinition, TMediaEncoderHostWorkerDefinition>({\n    encode: ({ call }) => {\n        return async (encoderId, timeslice) => {\n            const arrayBuffers = await call('encode', { encoderId, timeslice });\n\n            encoderIds.delete(encoderId);\n\n            return arrayBuffers;\n        };\n    },\n    instantiate: ({ call }) => {\n        return async (mimeType, sampleRate) => {\n            const encoderId = addUniqueNumber(encoderIds);\n            const port = await call('instantiate', { encoderId, mimeType, sampleRate });\n\n            return { encoderId, port };\n        };\n    },\n    register: ({ call }) => {\n        return (port) => {\n            return call('register', { port }, [port]);\n        };\n    }\n});\n\nexport const load: TMediaEncoderHostBrokerLoader = (url: string) => {\n    const worker = new Worker(url);\n\n    return wrap(worker);\n};\n"]},"metadata":{},"sourceType":"module"}