{"ast":null,"code":"export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n  for (const lmnt of set) {\n    if (predicate(lmnt)) {\n      if (ignoreDuplicates) {\n        return false;\n      }\n\n      throw Error('The set contains at least one similar element.');\n    }\n  }\n\n  set.add(element);\n  return true;\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,kBAAkB,GAAgC,CAACC,GAAD,EAAMC,OAAN,EAAeC,SAAf,EAA0BC,gBAA1B,KAA8C;EACzG,KAAK,MAAMC,IAAX,IAAmBJ,GAAnB,EAAwB;IACpB,IAAIE,SAAS,CAACE,IAAD,CAAb,EAAqB;MACjB,IAAID,gBAAJ,EAAsB;QAClB,OAAO,KAAP;MACH;;MAED,MAAME,KAAK,CAAC,gDAAD,CAAX;IACH;EACJ;;EAEDL,GAAG,CAACM,GAAJ,CAAQL,OAAR;EAEA,OAAO,IAAP;AACH,CAdM","names":["insertElementInSet","set","element","predicate","ignoreDuplicates","lmnt","Error","add"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\helpers\\insert-element-in-set.ts"],"sourcesContent":["import { TInsertElementInSetFunction } from '../types';\n\nexport const insertElementInSet: TInsertElementInSetFunction = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n\n    set.add(element);\n\n    return true;\n};\n"]},"metadata":{},"sourceType":"module"}