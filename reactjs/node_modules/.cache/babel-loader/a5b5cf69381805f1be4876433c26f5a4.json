{"ast":null,"code":"export const createInvalidModificationError = function () {\n  let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  try {\n    return new DOMException(message, 'InvalidModificationError');\n  } catch (err) {\n    // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n    err.code = 13;\n    err.message = message;\n    err.name = 'InvalidModificationError';\n    return err;\n  }\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,8BAA8B,GAAqC,YAAiB;EAAA,IAAhBC,OAAgB,uEAAN,EAAM;;EAC7F,IAAI;IACA,OAAO,IAAIC,YAAJ,CAAiBD,OAAjB,EAA0B,0BAA1B,CAAP;EACH,CAFD,CAEE,OAAOE,GAAP,EAAY;IACV;IACAA,GAAG,CAACC,IAAJ,GAAW,EAAX;IACAD,GAAG,CAACF,OAAJ,GAAcA,OAAd;IACAE,GAAG,CAACE,IAAJ,GAAW,0BAAX;IAEA,OAAOF,GAAP;EACH;AACJ,CAXM","names":["createInvalidModificationError","message","DOMException","err","code","name"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\extendable-media-recorder\\src\\factories\\invalid-modification-error.ts"],"sourcesContent":["import { TInvalidModificationErrorFactory } from '../types';\n\nexport const createInvalidModificationError: TInvalidModificationErrorFactory = (message = '') => {\n    try {\n        return new DOMException(message, 'InvalidModificationError');\n    } catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 13;\n        err.message = message;\n        err.name = 'InvalidModificationError';\n\n        return err;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}