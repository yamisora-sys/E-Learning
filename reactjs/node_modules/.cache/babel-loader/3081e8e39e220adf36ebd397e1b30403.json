{"ast":null,"code":"import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n  let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n\n  if (nodeToProcessorMap === undefined) {\n    nodeToProcessorMap = new WeakMap();\n    NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n  }\n\n  const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n  nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n  return audioWorkletProcessorPromise;\n};","map":{"version":3,"mappings":"AAAA,SAASA,sBAAT,QAAuC,YAAvC;AAGA,SAASC,kCAAT,QAAmD,0CAAnD;AAEA,OAAO,MAAMC,2BAA2B,GAAG,CACvCC,aADuC,EAEvCC,sBAFuC,EAGvCC,oBAHuC,EAIvCC,uBAJuC,KAKN;EACjC,IAAIC,kBAAkB,GAAGP,sBAAsB,CAACQ,GAAvB,CAA2BL,aAA3B,CAAzB;;EAEA,IAAII,kBAAkB,KAAKE,SAA3B,EAAsC;IAClCF,kBAAkB,GAAG,IAAIG,OAAJ,EAArB;IAEAV,sBAAsB,CAACW,GAAvB,CAA2BR,aAA3B,EAA0CI,kBAA1C;EACH;;EAED,MAAMK,4BAA4B,GAAGX,kCAAkC,CAACI,oBAAD,EAAuBC,uBAAvB,CAAvE;EAEAC,kBAAkB,CAACI,GAAnB,CAAuBP,sBAAvB,EAA+CQ,4BAA/C;EAEA,OAAOA,4BAAP;AACH,CAnBM","names":["NODE_TO_PROCESSOR_MAPS","createAudioWorkletProcessorPromise","createAudioWorkletProcessor","nativeContext","nativeAudioWorkletNode","processorConstructor","audioWorkletNodeOptions","nodeToProcessorMap","get","undefined","WeakMap","set","audioWorkletProcessorPromise"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\helpers\\create-audio-worklet-processor.ts"],"sourcesContent":["import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { IAudioWorkletNodeOptions, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { TNativeAudioWorkletNode, TNativeContext } from '../types';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\n\nexport const createAudioWorkletProcessor = (\n    nativeContext: TNativeContext,\n    nativeAudioWorkletNode: TNativeAudioWorkletNode,\n    processorConstructor: IAudioWorkletProcessorConstructor,\n    audioWorkletNodeOptions: IAudioWorkletNodeOptions\n): Promise<IAudioWorkletProcessor> => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n\n    return audioWorkletProcessorPromise;\n};\n"]},"metadata":{},"sourceType":"module"}