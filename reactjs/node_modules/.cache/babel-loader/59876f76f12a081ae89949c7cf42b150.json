{"ast":null,"code":"export const createPrependSubscribableThing = wrapSubscribeFunction => (subscribableThing, prependedValue) => wrapSubscribeFunction(observer => {\n  observer.next(prependedValue);\n  return subscribableThing(observer);\n});","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,8BAA8B,GACtCC,qBAAD,IACA,CACIC,iBADJ,EAEIC,cAFJ,KAIIF,qBAAqB,CAAEG,QAAD,IAAa;EAC/BA,QAAQ,CAACC,IAAT,CAAcF,cAAd;EAEA,OAAOD,iBAAiB,CAACE,QAAD,CAAxB;AACH,CAJoB,CANtB","names":["createPrependSubscribableThing","wrapSubscribeFunction","subscribableThing","prependedValue","observer","next"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\subscribable-things\\src\\factories\\prepend-subscribable-thing.ts"],"sourcesContent":["import { TSubscribableThing, TWrapSubscribeFunctionFunction } from '../types';\n\nexport const createPrependSubscribableThing =\n    (wrapSubscribeFunction: TWrapSubscribeFunctionFunction) =>\n    <TValue, TPrependedValue>(\n        subscribableThing: TSubscribableThing<TValue>,\n        prependedValue: TPrependedValue\n    ): TSubscribableThing<TPrependedValue | TValue> =>\n        wrapSubscribeFunction((observer) => {\n            observer.next(prependedValue);\n\n            return subscribableThing(observer);\n        });\n"]},"metadata":{},"sourceType":"module"}