{"ast":null,"code":"import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { renderUnknownPortIdError } from './error-renderers';\nimport { isSupportingTransferables } from './is-supporting-transferables';\nconst DESTROY_WORKER_FUNCTIONS = new Map();\nexport const extendWorkerImplementation = (createWorker, partialWorkerImplementation, isSupportedFunction) => ({ ...partialWorkerImplementation,\n  connect: _ref => {\n    let {\n      port\n    } = _ref;\n    port.start();\n    const destroyWorker = createWorker(port, partialWorkerImplementation);\n    const portId = generateUniqueNumber(DESTROY_WORKER_FUNCTIONS);\n    DESTROY_WORKER_FUNCTIONS.set(portId, () => {\n      destroyWorker();\n      port.close();\n      DESTROY_WORKER_FUNCTIONS.delete(portId);\n    });\n    return {\n      result: portId\n    };\n  },\n  disconnect: _ref2 => {\n    let {\n      portId\n    } = _ref2;\n    const destroyWorker = DESTROY_WORKER_FUNCTIONS.get(portId);\n\n    if (destroyWorker === undefined) {\n      throw renderUnknownPortIdError({\n        portId: portId.toString()\n      });\n    }\n\n    destroyWorker();\n    return {\n      result: null\n    };\n  },\n  isSupported: async () => {\n    const isSelfSupported = await isSupportingTransferables();\n\n    if (isSelfSupported) {\n      const result = isSupportedFunction();\n      const synchronousResult = result instanceof Promise ? await result : result;\n      return {\n        result: synchronousResult\n      };\n    }\n\n    return {\n      result: false\n    };\n  }\n});","map":{"version":3,"mappings":"AAAA,SAASA,oBAAT,QAAqC,qBAArC;AAGA,SAASC,wBAAT,QAAyC,mBAAzC;AACA,SAASC,yBAAT,QAA0C,+BAA1C;AAEA,MAAMC,wBAAwB,GAAwC,IAAIC,GAAJ,EAAtE;AAEA,OAAO,MAAMC,0BAA0B,GAAG,CACtCC,YADsC,EAEtCC,2BAFsC,EAGtCC,mBAHsC,MAIwC,EAC9E,GAAGD,2BAD2E;EAE9EE,OAAO,EAAE,QAAa;IAAA,IAAZ;MAAEC;IAAF,CAAY;IAClBA,IAAI,CAACC,KAAL;IAEA,MAAMC,aAAa,GAAGN,YAAY,CAACI,IAAD,EAAOH,2BAAP,CAAlC;IACA,MAAMM,MAAM,GAAGb,oBAAoB,CAACG,wBAAD,CAAnC;IAEAA,wBAAwB,CAACW,GAAzB,CAA6BD,MAA7B,EAAqC,MAAK;MACtCD,aAAa;MACbF,IAAI,CAACK,KAAL;MACAZ,wBAAwB,CAACa,MAAzB,CAAgCH,MAAhC;IACH,CAJD;IAMA,OAAO;MAAEI,MAAM,EAAEJ;IAAV,CAAP;EACH,CAf6E;EAgB9EK,UAAU,EAAE,SAAe;IAAA,IAAd;MAAEL;IAAF,CAAc;IACvB,MAAMD,aAAa,GAAGT,wBAAwB,CAACgB,GAAzB,CAA6BN,MAA7B,CAAtB;;IAEA,IAAID,aAAa,KAAKQ,SAAtB,EAAiC;MAC7B,MAAMnB,wBAAwB,CAAC;QAAEY,MAAM,EAAEA,MAAM,CAACQ,QAAP;MAAV,CAAD,CAA9B;IACH;;IAEDT,aAAa;IAEb,OAAO;MAAEK,MAAM,EAAE;IAAV,CAAP;EACH,CA1B6E;EA2B9EK,WAAW,EAAE,YAAW;IACpB,MAAMC,eAAe,GAAG,MAAMrB,yBAAyB,EAAvD;;IAEA,IAAIqB,eAAJ,EAAqB;MACjB,MAAMN,MAAM,GAAGT,mBAAmB,EAAlC;MACA,MAAMgB,iBAAiB,GAAGP,MAAM,YAAYQ,OAAlB,GAA4B,MAAMR,MAAlC,GAA2CA,MAArE;MAEA,OAAO;QAAEA,MAAM,EAAEO;MAAV,CAAP;IACH;;IAED,OAAO;MAAEP,MAAM,EAAE;IAAV,CAAP;EACH;AAtC6E,CAJxC,CAAnC","names":["generateUniqueNumber","renderUnknownPortIdError","isSupportingTransferables","DESTROY_WORKER_FUNCTIONS","Map","extendWorkerImplementation","createWorker","partialWorkerImplementation","isSupportedFunction","connect","port","start","destroyWorker","portId","set","close","delete","result","disconnect","get","undefined","toString","isSupported","isSelfSupported","synchronousResult","Promise"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\worker-factory\\src\\helpers\\extend-worker-implementation.ts"],"sourcesContent":["import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { IDefaultWorkerDefinition, IReceiver, IWorkerDefinition } from '../interfaces';\nimport { TDestroyWorkerFunction, TWorkerImplementation } from '../types';\nimport { renderUnknownPortIdError } from './error-renderers';\nimport { isSupportingTransferables } from './is-supporting-transferables';\n\nconst DESTROY_WORKER_FUNCTIONS: Map<number, TDestroyWorkerFunction> = new Map();\n\nexport const extendWorkerImplementation = <T extends IWorkerDefinition>(\n    createWorker: (receiver: IReceiver, workerImplementation: TWorkerImplementation<T>) => TDestroyWorkerFunction,\n    partialWorkerImplementation: TWorkerImplementation<T>,\n    isSupportedFunction: () => boolean | Promise<boolean>\n): TWorkerImplementation<T> & TWorkerImplementation<IDefaultWorkerDefinition> => ({\n    ...partialWorkerImplementation,\n    connect: ({ port }) => {\n        port.start();\n\n        const destroyWorker = createWorker(port, partialWorkerImplementation);\n        const portId = generateUniqueNumber(DESTROY_WORKER_FUNCTIONS);\n\n        DESTROY_WORKER_FUNCTIONS.set(portId, () => {\n            destroyWorker();\n            port.close();\n            DESTROY_WORKER_FUNCTIONS.delete(portId);\n        });\n\n        return { result: portId };\n    },\n    disconnect: ({ portId }) => {\n        const destroyWorker = DESTROY_WORKER_FUNCTIONS.get(portId);\n\n        if (destroyWorker === undefined) {\n            throw renderUnknownPortIdError({ portId: portId.toString() });\n        }\n\n        destroyWorker();\n\n        return { result: null };\n    },\n    isSupported: async () => {\n        const isSelfSupported = await isSupportingTransferables();\n\n        if (isSelfSupported) {\n            const result = isSupportedFunction();\n            const synchronousResult = result instanceof Promise ? await result : result;\n\n            return { result: synchronousResult };\n        }\n\n        return { result: false };\n    }\n});\n"]},"metadata":{},"sourceType":"module"}