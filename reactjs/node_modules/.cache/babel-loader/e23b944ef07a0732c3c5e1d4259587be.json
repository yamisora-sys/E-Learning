{"ast":null,"code":"import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n  return pickElementFromSet(activeInputs, activeInputConnection => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};","map":{"version":3,"mappings":"AAEA,SAASA,kBAAT,QAAmC,yBAAnC;AAEA,OAAO,MAAMC,uCAAuC,GAAG,CACnDC,YADmD,EAEnDC,MAFmD,EAGnDC,MAHmD,KAInD;EACA,OAAOJ,kBAAkB,CACrBE,YADqB,EAEpBG,qBAAD,IAA2BA,qBAAqB,CAAC,CAAD,CAArB,KAA6BF,MAA7B,IAAuCE,qBAAqB,CAAC,CAAD,CAArB,KAA6BD,MAF1E,CAAzB;AAIH,CATM","names":["pickElementFromSet","deleteActiveInputConnectionToAudioParam","activeInputs","source","output","activeInputConnection"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\helpers\\delete-active-input-connection-to-audio-param.ts"],"sourcesContent":["import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deleteActiveInputConnectionToAudioParam = <T extends TContext>(\n    activeInputs: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    output: number\n) => {\n    return pickElementFromSet(\n        activeInputs,\n        (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output\n    );\n};\n"]},"metadata":{},"sourceType":"module"}