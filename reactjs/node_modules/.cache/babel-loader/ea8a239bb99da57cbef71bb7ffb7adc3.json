{"ast":null,"code":"export const createAddSilentConnection = createNativeGainNode => {\n  return (nativeContext, nativeAudioScheduledSourceNode) => {\n    const nativeGainNode = createNativeGainNode(nativeContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: 0\n    });\n    nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n\n    const disconnect = () => {\n      nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n      nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n      nativeGainNode.disconnect();\n    };\n\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,yBAAyB,GAAiCC,oBAAD,IAAyB;EAC3F,OAAO,CAACC,aAAD,EAAgBC,8BAAhB,KAAkD;IACrD,MAAMC,cAAc,GAAGH,oBAAoB,CAACC,aAAD,EAAgB;MACvDG,YAAY,EAAE,CADyC;MAEvDC,gBAAgB,EAAE,UAFqC;MAGvDC,qBAAqB,EAAE,UAHgC;MAIvDC,IAAI,EAAE;IAJiD,CAAhB,CAA3C;IAOAL,8BAA8B,CAACM,OAA/B,CAAuCL,cAAvC,EAAuDK,OAAvD,CAA+DP,aAAa,CAACQ,WAA7E;;IAEA,MAAMC,UAAU,GAAG,MAAK;MACpBR,8BAA8B,CAACS,mBAA/B,CAAmD,OAAnD,EAA4DD,UAA5D;MACAR,8BAA8B,CAACQ,UAA/B,CAA0CP,cAA1C;MACAA,cAAc,CAACO,UAAf;IACH,CAJD;;IAMAR,8BAA8B,CAACU,gBAA/B,CAAgD,OAAhD,EAAyDF,UAAzD;EACH,CAjBD;AAkBH,CAnBM","names":["createAddSilentConnection","createNativeGainNode","nativeContext","nativeAudioScheduledSourceNode","nativeGainNode","channelCount","channelCountMode","channelInterpretation","gain","connect","destination","disconnect","removeEventListener","addEventListener"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\add-silent-connection.ts"],"sourcesContent":["import { TAddSilentConnectionFactory } from '../types';\n\nexport const createAddSilentConnection: TAddSilentConnectionFactory = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n"]},"metadata":{},"sourceType":"module"}