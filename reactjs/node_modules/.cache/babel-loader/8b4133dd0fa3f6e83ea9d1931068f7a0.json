{"ast":null,"code":"export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n  return anything => {\n    const nativeContext = contextStore.get(anything);\n    return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n  };\n};","map":{"version":3,"mappings":"AAGA,OAAO,MAAMA,uBAAuB,GAA8B,CAACC,YAAD,EAAeC,oBAAf,KAAuC;EACrG,OAAQC,QAAD,IAAqF;IACxF,MAAMC,aAAa,GAAGH,YAAY,CAACI,GAAb,CAAsBF,QAAtB,CAAtB;IAEA,OAAOD,oBAAoB,CAACE,aAAD,CAApB,IAAuCF,oBAAoB,CAACC,QAAD,CAAlE;EACH,CAJD;AAKH,CANM","names":["createIsAnyAudioContext","contextStore","isNativeAudioContext","anything","nativeContext","get"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\is-any-audio-context.ts"],"sourcesContent":["import { IAudioContext, IMinimalAudioContext } from '../interfaces';\nimport { TIsAnyAudioContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsAnyAudioContext: TIsAnyAudioContextFactory = (contextStore, isNativeAudioContext) => {\n    return (anything): anything is IAudioContext | IMinimalAudioContext | TNativeAudioContext => {\n        const nativeContext = contextStore.get(<any>anything);\n\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n"]},"metadata":{},"sourceType":"module"}