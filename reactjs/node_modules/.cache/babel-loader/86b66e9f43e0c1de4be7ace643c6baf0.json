{"ast":null,"code":"export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n  const value = options[audioParam];\n\n  if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n    nativeAudioNode[audioParam].value = value;\n  }\n};","map":{"version":3,"mappings":"AAAA,OAAO,MAAMA,oCAAoC,GAAG,CAChDC,eADgD,EAEhDC,OAFgD,EAGhDC,UAHgD,KAIhD;EACA,MAAMC,KAAK,GAAGF,OAAO,CAACC,UAAD,CAArB;;EAEA,IAAIC,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAKH,eAAe,CAACE,UAAD,CAAf,CAA4BC,KAAjE,EAAwE;IACpEH,eAAe,CAACE,UAAD,CAAf,CAA4BC,KAA5B,GAAoCA,KAApC;EACH;AACJ,CAVM","names":["assignNativeAudioNodeAudioParamValue","nativeAudioNode","options","audioParam","value","undefined"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\helpers\\assign-native-audio-node-audio-param-value.ts"],"sourcesContent":["export const assignNativeAudioNodeAudioParamValue = <T extends { [key: string]: any }, U extends { [key: string]: any }>(\n    nativeAudioNode: T,\n    options: U,\n    audioParam: keyof T & keyof U\n) => {\n    const value = options[audioParam];\n\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}