{"ast":null,"code":"export const createEvaluateSource = window => {\n  return source => new Promise((resolve, reject) => {\n    if (window === null) {\n      // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n      reject(new SyntaxError());\n      return;\n    }\n\n    const head = window.document.head;\n\n    if (head === null) {\n      // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n      reject(new SyntaxError());\n    } else {\n      const script = window.document.createElement('script'); // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n\n      const blob = new Blob([source], {\n        type: 'application/javascript'\n      });\n      const url = URL.createObjectURL(blob);\n      const originalOnErrorHandler = window.onerror;\n\n      const removeErrorEventListenerAndRevokeUrl = () => {\n        window.onerror = originalOnErrorHandler;\n        URL.revokeObjectURL(url);\n      };\n\n      window.onerror = (message, src, lineno, colno, error) => {\n        // @todo Edge thinks the source is the one of the html document.\n        if (src === url || src === window.location.href && lineno === 1 && colno === 1) {\n          removeErrorEventListenerAndRevokeUrl();\n          reject(error);\n          return false;\n        }\n\n        if (originalOnErrorHandler !== null) {\n          return originalOnErrorHandler(message, src, lineno, colno, error);\n        }\n      };\n\n      script.onerror = () => {\n        removeErrorEventListenerAndRevokeUrl(); // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n\n        reject(new SyntaxError());\n      };\n\n      script.onload = () => {\n        removeErrorEventListenerAndRevokeUrl();\n        resolve();\n      };\n\n      script.src = url;\n      script.type = 'module';\n      head.appendChild(script);\n    }\n  });\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,oBAAoB,GAA4BC,MAAD,IAAW;EACnE,OAAQC,MAAD,IACH,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;IAC5B,IAAIJ,MAAM,KAAK,IAAf,EAAqB;MACjB;MACAI,MAAM,CAAC,IAAIC,WAAJ,EAAD,CAAN;MAEA;IACH;;IAED,MAAMC,IAAI,GAAGN,MAAM,CAACO,QAAP,CAAgBD,IAA7B;;IAEA,IAAIA,IAAI,KAAK,IAAb,EAAmB;MACf;MACAF,MAAM,CAAC,IAAIC,WAAJ,EAAD,CAAN;IACH,CAHD,MAGO;MACH,MAAMG,MAAM,GAAGR,MAAM,CAACO,QAAP,CAAgBE,aAAhB,CAA8B,QAA9B,CAAf,CADG,CAEH;;MACA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACV,MAAD,CAAT,EAAmB;QAAEW,IAAI,EAAE;MAAR,CAAnB,CAAb;MACA,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAZ;MAEA,MAAMM,sBAAsB,GAAGhB,MAAM,CAACiB,OAAtC;;MAEA,MAAMC,oCAAoC,GAAG,MAAK;QAC9ClB,MAAM,CAACiB,OAAP,GAAiBD,sBAAjB;QAEAF,GAAG,CAACK,eAAJ,CAAoBN,GAApB;MACH,CAJD;;MAMAb,MAAM,CAACiB,OAAP,GAAiB,CAACG,OAAD,EAAUC,GAAV,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,KAA9B,KAAuC;QACpD;QACA,IAAIH,GAAG,KAAKR,GAAR,IAAgBQ,GAAG,KAAKrB,MAAM,CAACyB,QAAP,CAAgBC,IAAxB,IAAgCJ,MAAM,KAAK,CAA3C,IAAgDC,KAAK,KAAK,CAA9E,EAAkF;UAC9EL,oCAAoC;UACpCd,MAAM,CAACoB,KAAD,CAAN;UAEA,OAAO,KAAP;QACH;;QAED,IAAIR,sBAAsB,KAAK,IAA/B,EAAqC;UACjC,OAAOA,sBAAsB,CAACI,OAAD,EAAUC,GAAV,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,KAA9B,CAA7B;QACH;MACJ,CAZD;;MAcAhB,MAAM,CAACS,OAAP,GAAiB,MAAK;QAClBC,oCAAoC,GADlB,CAElB;;QACAd,MAAM,CAAC,IAAIC,WAAJ,EAAD,CAAN;MACH,CAJD;;MAKAG,MAAM,CAACmB,MAAP,GAAgB,MAAK;QACjBT,oCAAoC;QACpCf,OAAO;MACV,CAHD;;MAIAK,MAAM,CAACa,GAAP,GAAaR,GAAb;MACAL,MAAM,CAACI,IAAP,GAAc,QAAd;MAEAN,IAAI,CAACsB,WAAL,CAAiBpB,MAAjB;IACH;EACJ,CAvDD,CADJ;AAyDH,CA1DM","names":["createEvaluateSource","window","source","Promise","resolve","reject","SyntaxError","head","document","script","createElement","blob","Blob","type","url","URL","createObjectURL","originalOnErrorHandler","onerror","removeErrorEventListenerAndRevokeUrl","revokeObjectURL","message","src","lineno","colno","error","location","href","onload","appendChild"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\evaluate-source.ts"],"sourcesContent":["import { TEvaluateSourceFactory } from '../types';\n\nexport const createEvaluateSource: TEvaluateSourceFactory = (window) => {\n    return (source) =>\n        new Promise((resolve, reject) => {\n            if (window === null) {\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n\n                return;\n            }\n\n            const head = window.document.head;\n\n            if (head === null) {\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            } else {\n                const script = window.document.createElement('script');\n                // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n                const blob = new Blob([source], { type: 'application/javascript' });\n                const url = URL.createObjectURL(blob);\n\n                const originalOnErrorHandler = window.onerror;\n\n                const removeErrorEventListenerAndRevokeUrl = () => {\n                    window.onerror = originalOnErrorHandler;\n\n                    URL.revokeObjectURL(url);\n                };\n\n                window.onerror = (message, src, lineno, colno, error) => {\n                    // @todo Edge thinks the source is the one of the html document.\n                    if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                        removeErrorEventListenerAndRevokeUrl();\n                        reject(error);\n\n                        return false;\n                    }\n\n                    if (originalOnErrorHandler !== null) {\n                        return originalOnErrorHandler(message, src, lineno, colno, error);\n                    }\n                };\n\n                script.onerror = () => {\n                    removeErrorEventListenerAndRevokeUrl();\n                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                    reject(new SyntaxError());\n                };\n                script.onload = () => {\n                    removeErrorEventListenerAndRevokeUrl();\n                    resolve();\n                };\n                script.src = url;\n                script.type = 'module';\n\n                head.appendChild(script);\n            }\n        });\n};\n"]},"metadata":{},"sourceType":"module"}