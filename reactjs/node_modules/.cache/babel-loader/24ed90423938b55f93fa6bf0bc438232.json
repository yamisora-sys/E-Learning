{"ast":null,"code":"export const createMediaDevices = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n  return () => wrapSubscribeFunction(observer => {\n    if (window === null || window.navigator === undefined || window.navigator.mediaDevices === undefined || window.navigator.mediaDevices.enumerateDevices === undefined) {\n      return emitNotSupportedError(observer);\n    }\n\n    let isActive = true;\n\n    const enumerateDevices = () => {\n      window.navigator.mediaDevices.enumerateDevices().then(mediaDevices => {\n        if (isActive) {\n          observer.next(mediaDevices);\n        }\n      }, err => {\n        if (isActive) {\n          unsubscribe();\n          observer.error(err);\n        }\n      });\n    };\n\n    const unsubscribe = () => {\n      isActive = false;\n      window.navigator.mediaDevices.removeEventListener('devicechange', enumerateDevices);\n    };\n\n    enumerateDevices();\n    window.navigator.mediaDevices.addEventListener('devicechange', enumerateDevices);\n    return unsubscribe;\n  });\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,kBAAkB,GAAyB,CAACC,qBAAD,EAAwBC,MAAxB,EAAgCC,qBAAhC,KAAyD;EAC7G,OAAO,MACHA,qBAAqB,CAAEC,QAAD,IAAa;IAC/B,IACIF,MAAM,KAAK,IAAX,IACAA,MAAM,CAACG,SAAP,KAAqBC,SADrB,IAEAJ,MAAM,CAACG,SAAP,CAAiBE,YAAjB,KAAkCD,SAFlC,IAGAJ,MAAM,CAACG,SAAP,CAAiBE,YAAjB,CAA8BC,gBAA9B,KAAmDF,SAJvD,EAKE;MACE,OAAOL,qBAAqB,CAACG,QAAD,CAA5B;IACH;;IAED,IAAIK,QAAQ,GAAG,IAAf;;IAEA,MAAMD,gBAAgB,GAAG,MAAK;MAC1BN,MAAM,CAACG,SAAP,CAAiBE,YAAjB,CAA8BC,gBAA9B,GAAiDE,IAAjD,CACKH,YAAD,IAAiB;QACb,IAAIE,QAAJ,EAAc;UACVL,QAAQ,CAACO,IAAT,CAAcJ,YAAd;QACH;MACJ,CALL,EAMKK,GAAD,IAAQ;QACJ,IAAIH,QAAJ,EAAc;UACVI,WAAW;UAEXT,QAAQ,CAACU,KAAT,CAAeF,GAAf;QACH;MACJ,CAZL;IAcH,CAfD;;IAgBA,MAAMC,WAAW,GAAG,MAAK;MACrBJ,QAAQ,GAAG,KAAX;MACAP,MAAM,CAACG,SAAP,CAAiBE,YAAjB,CAA8BQ,mBAA9B,CAAkD,cAAlD,EAAkEP,gBAAlE;IACH,CAHD;;IAKAA,gBAAgB;IAChBN,MAAM,CAACG,SAAP,CAAiBE,YAAjB,CAA8BS,gBAA9B,CAA+C,cAA/C,EAA+DR,gBAA/D;IAEA,OAAOK,WAAP;EACH,CArCoB,CADzB;AAuCH,CAxCM","names":["createMediaDevices","emitNotSupportedError","window","wrapSubscribeFunction","observer","navigator","undefined","mediaDevices","enumerateDevices","isActive","then","next","err","unsubscribe","error","removeEventListener","addEventListener"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\subscribable-things\\src\\factories\\media-devices.ts"],"sourcesContent":["import { TMediaDevicesFactory } from '../types';\n\nexport const createMediaDevices: TMediaDevicesFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () =>\n        wrapSubscribeFunction((observer) => {\n            if (\n                window === null ||\n                window.navigator === undefined ||\n                window.navigator.mediaDevices === undefined ||\n                window.navigator.mediaDevices.enumerateDevices === undefined\n            ) {\n                return emitNotSupportedError(observer);\n            }\n\n            let isActive = true;\n\n            const enumerateDevices = () => {\n                window.navigator.mediaDevices.enumerateDevices().then(\n                    (mediaDevices) => {\n                        if (isActive) {\n                            observer.next(mediaDevices);\n                        }\n                    },\n                    (err) => {\n                        if (isActive) {\n                            unsubscribe();\n\n                            observer.error(err);\n                        }\n                    }\n                );\n            };\n            const unsubscribe = () => {\n                isActive = false;\n                window.navigator.mediaDevices.removeEventListener('devicechange', enumerateDevices);\n            };\n\n            enumerateDevices();\n            window.navigator.mediaDevices.addEventListener('devicechange', enumerateDevices);\n\n            return unsubscribe;\n        });\n};\n"]},"metadata":{},"sourceType":"module"}