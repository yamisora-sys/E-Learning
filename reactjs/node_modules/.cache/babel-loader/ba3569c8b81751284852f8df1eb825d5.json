{"ast":null,"code":"var _jsxFileName = \"D:\\\\programer\\\\xampp\\\\htdocs\\\\E-Learning\\\\reactjs\\\\src\\\\pages\\\\Course\\\\RecordView.js\",\n    _s = $RefreshSig$();\n\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport React, { useEffect, useState } from \"react\";\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { initializeApp } from 'firebase/app';\nimport { getStorage, ref, uploadBytes, getDownloadURL, connectStorageEmulator } from \"firebase/storage\";\nimport swal from 'sweetalert';\nimport { default as storage } from \"../firebaseConfig\";\nimport { ReactDOM } from \"react\";\nimport { AxiosError } from \"axios\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecordView = props => {\n  _s();\n\n  const [lesson_id, setLesson_id] = useState(props.match.params.id);\n  const [second, setSecond] = useState(\"00\");\n  const [minute, setMinute] = useState(\"00\");\n  const [isActive, setIsActive] = useState(false);\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    let intervalId;\n\n    if (isActive) {\n      intervalId = setInterval(() => {\n        const secondCounter = counter % 60;\n        const minuteCounter = Math.floor(counter / 60);\n        let computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}` : secondCounter;\n        let computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}` : minuteCounter;\n        setSecond(computedSecond);\n        setMinute(computedMinute);\n        setCounter(counter => counter + 1);\n      }, 500);\n    }\n\n    return () => clearInterval(intervalId);\n  }, [isActive, counter]);\n  const {\n    status,\n    startRecording,\n    stopRecording,\n    pauseRecording,\n    mediaBlobUrl\n  } = useReactMediaRecorder({\n    video: false,\n    audio: true,\n    echoCancellation: true,\n    onStop: (blobUrl, blob) => {\n      const filename = `${new Date().getTime()}.wav`;\n      const uploadFile = document.createElement('button');\n      uploadFile.innerHTML = 'Upload';\n      uploadFile.addEventListener('click', () => {\n        const storageRef = ref(storage, 'audio/' + filename); // 'file' comes from the Blob or File API\n\n        uploadBytes(storageRef, blob).then(snapshot => {\n          console.log('Uploaded a blob or file!');\n          getDownloadURL(storageRef).then(async url => {\n            //save url to database\n            const data = new FormData();\n            data.append('lesson_id', lesson_id);\n            data.append('url', url);\n            const res = await axios.post('http://localhost:8000/api/save-audio-record', data);\n\n            if (res.status === 200) {\n              console.log('Saved to database');\n              swal({\n                title: \"Success!\",\n                text: res.data.message,\n                icon: \"success\",\n                buttons: \"OK!\"\n              });\n              props.history.push(`/show-lesson/${lesson_id}`);\n            } else {\n              console.log('Error saving to database');\n            }\n          });\n        });\n      });\n      document.body.appendChild(uploadFile);\n      const audio = document.createElement('audio');\n      audio.src = blobUrl;\n      audio.controls = true;\n      document.body.appendChild(audio);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      className: \"text-red-500 \",\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      className: \"text-green-500\",\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecordView, \"L5eBxtp89bu2OAZ0LDrqqXRiepI=\", false, function () {\n  return [useReactMediaRecorder];\n});\n\n_c = RecordView;\nexport default RecordView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordView\");","map":{"version":3,"names":["useReactMediaRecorder","React","useEffect","useState","Component","Link","initializeApp","getStorage","ref","uploadBytes","getDownloadURL","connectStorageEmulator","swal","default","storage","ReactDOM","AxiosError","axios","RecordView","props","lesson_id","setLesson_id","match","params","id","second","setSecond","minute","setMinute","isActive","setIsActive","counter","setCounter","intervalId","setInterval","secondCounter","minuteCounter","Math","floor","computedSecond","String","length","computedMinute","clearInterval","status","startRecording","stopRecording","pauseRecording","mediaBlobUrl","video","audio","echoCancellation","onStop","blobUrl","blob","filename","Date","getTime","uploadFile","document","createElement","innerHTML","addEventListener","storageRef","then","snapshot","console","log","url","data","FormData","append","res","post","title","text","message","icon","buttons","history","push","body","appendChild","src","controls"],"sources":["D:/programer/xampp/htdocs/E-Learning/reactjs/src/pages/Course/RecordView.js"],"sourcesContent":["import { useReactMediaRecorder } from \"react-media-recorder\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {initializeApp} from 'firebase/app';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL, connectStorageEmulator } from \"firebase/storage\";\r\nimport swal from 'sweetalert';\r\nimport {default as storage} from \"../firebaseConfig\";\r\n\r\nimport { ReactDOM } from \"react\";\r\nimport { AxiosError } from \"axios\";\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nconst RecordView = (props) => {\r\n  const [lesson_id, setLesson_id] = useState(props.match.params.id);\r\n  const [second, setSecond] = useState(\"00\");\r\n  const [minute, setMinute] = useState(\"00\");\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [counter, setCounter] = useState(0);\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    if (isActive) {\r\n      intervalId = setInterval(() => {\r\n        const secondCounter = counter % 60;\r\n        const minuteCounter = Math.floor(counter / 60);\r\n\r\n        let computedSecond =\r\n          String(secondCounter).length === 1\r\n            ? `0${secondCounter}`\r\n            : secondCounter;\r\n        let computedMinute =\r\n          String(minuteCounter).length === 1\r\n            ? `0${minuteCounter}`\r\n            : minuteCounter;\r\n\r\n        setSecond(computedSecond);\r\n        setMinute(computedMinute);\r\n\r\n        setCounter((counter) => counter + 1);\r\n      }, 500);\r\n    }\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [isActive, counter]);\r\n\r\n  const {\r\n    status,\r\n    startRecording,\r\n    stopRecording,\r\n    pauseRecording,\r\n    mediaBlobUrl,\r\n  } = useReactMediaRecorder({\r\n    video: false,\r\n    audio: true,\r\n    echoCancellation: true,\r\n    onStop: (blobUrl, blob) => {\r\n      const filename = `${new Date().getTime()}.wav`;\r\n      const uploadFile = document.createElement('button');\r\n      uploadFile.innerHTML = 'Upload';\r\n      uploadFile.addEventListener('click', () => {\r\n        const storageRef = ref(storage, 'audio/' + filename);\r\n        // 'file' comes from the Blob or File API\r\n        uploadBytes(storageRef, blob).then((snapshot) => \r\n        { \r\n          console.log('Uploaded a blob or file!');\r\n          getDownloadURL(storageRef).then(async(url) => {\r\n            //save url to database\r\n            const data = new FormData();\r\n            data.append('lesson_id', lesson_id);\r\n            data.append('url', url);\r\n            const res = await axios.post('http://localhost:8000/api/save-audio-record', data)\r\n            if(res.status === 200)\r\n            {\r\n              console.log('Saved to database');\r\n              swal({\r\n                title: \"Success!\",\r\n                text: res.data.message,\r\n                icon: \"success\",\r\n                buttons: \"OK!\"\r\n              });\r\n              props.history.push(`/show-lesson/${lesson_id}`);\r\n            }\r\n            else\r\n            {\r\n              console.log('Error saving to database');\r\n            }\r\n          });\r\n        });\r\n      }\r\n      );\r\n      document.body.appendChild(uploadFile);\r\n\r\n      const audio = document.createElement('audio');\r\n      audio.src = blobUrl;\r\n      audio.controls = true;\r\n      document.body.appendChild(audio);\r\n\r\n    }\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"absolute\">\r\n      <p>{status}</p>\r\n      <button onClick={startRecording} className=\"text-red-500 \">\r\n        Start Recording\r\n      </button>\r\n      <button onClick={stopRecording} className=\"text-green-500\">\r\n        Stop Recording\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default RecordView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}