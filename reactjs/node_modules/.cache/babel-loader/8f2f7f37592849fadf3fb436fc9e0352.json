{"ast":null,"code":"const noop = () => {};\n\nconst rethrow = error => {\n  throw error;\n};\n\nexport function toObserver(observer) {\n  if (observer) {\n    if (observer.next && observer.error && observer.complete) {\n      return observer;\n    }\n\n    return {\n      complete: (observer.complete ?? noop).bind(observer),\n      error: (observer.error ?? rethrow).bind(observer),\n      next: (observer.next ?? noop).bind(observer)\n    };\n  }\n\n  return {\n    complete: noop,\n    error: rethrow,\n    next: noop\n  };\n}","map":{"version":3,"mappings":"AAOA,MAAMA,IAAI,GAAG,MAAK,CAAG,CAArB;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAmB;EAEjC,MAAMA,KAAN;AACD,CAHD;;AAKA,OAAM,SAAUC,UAAV,CAAwBC,QAAxB,EAAqD;EACzD,IAAIA,QAAJ,EAAc;IACZ,IAAIA,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACF,KAA1B,IAAmCE,QAAQ,CAACE,QAAhD,EAA0D;MACxD,OAAOF,QAAP;IACD;;IACD,OAAO;MACLE,QAAQ,EAAE,CAACF,QAAQ,CAACE,QAAT,IAAqBN,IAAtB,EAA4BO,IAA5B,CAAiCH,QAAjC,CADL;MAELF,KAAK,EAAE,CAACE,QAAQ,CAACF,KAAT,IAAkBD,OAAnB,EAA4BM,IAA5B,CAAiCH,QAAjC,CAFF;MAGLC,IAAI,EAAE,CAACD,QAAQ,CAACC,IAAT,IAAiBL,IAAlB,EAAwBO,IAAxB,CAA6BH,QAA7B;IAHD,CAAP;EAKD;;EACD,OAAO;IACLE,QAAQ,EAAEN,IADL;IAELE,KAAK,EAAED,OAFF;IAGLI,IAAI,EAAEL;EAHD,CAAP;AAKD","names":["noop","rethrow","error","toObserver","observer","next","complete","bind"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\rxjs-interop\\source\\to-observer.ts"],"sourcesContent":["/**\n * @license Use of this source code is governed by an MIT-style license that\n * can be found in the LICENSE file at https://github.com/cartant/rxjs-interop\n */\n\nimport { Observer, PartialObserver } from \"./types\";\n\nconst noop = () => {};\nconst rethrow = (error: unknown) => {\n  /* eslint-disable-next-line etc/throw-error */\n  throw error;\n};\n\nexport function toObserver<T>(observer?: PartialObserver<T>): Observer<T> {\n  if (observer) {\n    if (observer.next && observer.error && observer.complete) {\n      return observer as Observer<T>;\n    }\n    return {\n      complete: (observer.complete ?? noop).bind(observer),\n      error: (observer.error ?? rethrow).bind(observer),\n      next: (observer.next ?? noop).bind(observer),\n    };\n  }\n  return {\n    complete: noop,\n    error: rethrow,\n    next: noop,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}