{"ast":null,"code":"export const createAddAudioNodeConnections = audioNodeConnectionsStore => {\n  return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n    const activeInputs = [];\n\n    for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n      activeInputs.push(new Set());\n    }\n\n    audioNodeConnectionsStore.set(audioNode, {\n      activeInputs,\n      outputs: new Set(),\n      passiveInputs: new WeakMap(),\n      renderer: audioNodeRenderer\n    });\n  };\n};","map":{"version":3,"mappings":"AAGA,OAAO,MAAMA,6BAA6B,GAAqCC,yBAAD,IAA8B;EACxG,OAAO,CACHC,SADG,EAEHC,iBAFG,EAGHC,eAHG,KAIH;IACA,MAAMC,YAAY,GAAG,EAArB;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,eAAe,CAACG,cAApC,EAAoDD,CAAC,IAAI,CAAzD,EAA4D;MACxDD,YAAY,CAACG,IAAb,CAAkB,IAAIC,GAAJ,EAAlB;IACH;;IAEDR,yBAAyB,CAACS,GAA1B,CAA8BR,SAA9B,EAAyC;MACrCG,YADqC;MAErCM,OAAO,EAAE,IAAIF,GAAJ,EAF4B;MAGrCG,aAAa,EAAE,IAAIC,OAAJ,EAHsB;MAIrCC,QAAQ,EAAEX;IAJ2B,CAAzC;EAMH,CAjBD;AAkBH,CAnBM","names":["createAddAudioNodeConnections","audioNodeConnectionsStore","audioNode","audioNodeRenderer","nativeAudioNode","activeInputs","i","numberOfInputs","push","Set","set","outputs","passiveInputs","WeakMap","renderer"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\add-audio-node-connections.ts"],"sourcesContent":["import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TActiveInputConnection, TAddAudioNodeConnectionsFactory, TContext, TNativeAudioNode } from '../types';\n\nexport const createAddAudioNodeConnections: TAddAudioNodeConnectionsFactory = (audioNodeConnectionsStore) => {\n    return <T extends TContext>(\n        audioNode: IAudioNode<T>,\n        audioNodeRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioNodeRenderer<T, IAudioNode<T>> : null,\n        nativeAudioNode: TNativeAudioNode\n    ) => {\n        const activeInputs = [];\n\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set<TActiveInputConnection<T>>());\n        }\n\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n"]},"metadata":{},"sourceType":"module"}