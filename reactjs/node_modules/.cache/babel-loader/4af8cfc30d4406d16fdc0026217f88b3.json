{"ast":null,"code":"export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n  return class AudioDestinationNode extends audioNodeConstructor {\n    constructor(context, channelCount) {\n      const nativeContext = getNativeContext(context);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n      const audioDestinationNodeRenderer = isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null;\n      super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n      this._isNodeOfNativeOfflineAudioContext = isOffline;\n      this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n    }\n\n    get channelCount() {\n      return this._nativeAudioDestinationNode.channelCount;\n    }\n\n    set channelCount(value) {\n      // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n      // Bug #54: Firefox does throw an IndexSizeError.\n      if (this._isNodeOfNativeOfflineAudioContext) {\n        throw createInvalidStateError();\n      } // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n\n\n      if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n        throw createIndexSizeError();\n      }\n\n      this._nativeAudioDestinationNode.channelCount = value;\n    }\n\n    get channelCountMode() {\n      return this._nativeAudioDestinationNode.channelCountMode;\n    }\n\n    set channelCountMode(value) {\n      // Bug #53: No browser does throw an exception yet.\n      if (this._isNodeOfNativeOfflineAudioContext) {\n        throw createInvalidStateError();\n      }\n\n      this._nativeAudioDestinationNode.channelCountMode = value;\n    }\n\n    get maxChannelCount() {\n      return this._nativeAudioDestinationNode.maxChannelCount;\n    }\n\n  };\n};","map":{"version":3,"mappings":"AASA,OAAO,MAAMA,qCAAqC,GAA4C,CAC1FC,oBAD0F,EAE1FC,kCAF0F,EAG1FC,oBAH0F,EAI1FC,uBAJ0F,EAK1FC,gCAL0F,EAM1FC,gBAN0F,EAO1FC,2BAP0F,EAQ1FC,uBAR0F,KAS1F;EACA,OAAO,MAAMC,oBAAN,SAAuDR,oBAAvD,CAA8E;IAKjFS,YAAYC,OAAZ,EAAwBC,YAAxB,EAA4C;MACxC,MAAMC,aAAa,GAAGP,gBAAgB,CAACK,OAAD,CAAtC;MACA,MAAMG,SAAS,GAAGP,2BAA2B,CAACM,aAAD,CAA7C;MACA,MAAME,0BAA0B,GAAGV,gCAAgC,CAACQ,aAAD,EAAgBD,YAAhB,EAA8BE,SAA9B,CAAnE;MACA,MAAME,4BAA4B,GAC7BF,SAAS,GAAGZ,kCAAkC,CAACM,uBAAD,CAArC,GAAiE,IAD/E;MAIA,MAAMG,OAAN,EAAe,KAAf,EAAsBI,0BAAtB,EAAkDC,4BAAlD;MAEA,KAAKC,kCAAL,GAA0CH,SAA1C;MACA,KAAKI,2BAAL,GAAmCH,0BAAnC;IACH;;IAEe,IAAZH,YAAY;MACZ,OAAO,KAAKM,2BAAL,CAAiCN,YAAxC;IACH;;IAEe,IAAZA,YAAY,CAACO,KAAD,EAAM;MAClB;MACA;MACA,IAAI,KAAKF,kCAAT,EAA6C;QACzC,MAAMb,uBAAuB,EAA7B;MACH,CALiB,CAOlB;;;MACA,IAAIe,KAAK,GAAG,KAAKD,2BAAL,CAAiCE,eAA7C,EAA8D;QAC1D,MAAMjB,oBAAoB,EAA1B;MACH;;MAED,KAAKe,2BAAL,CAAiCN,YAAjC,GAAgDO,KAAhD;IACH;;IAEmB,IAAhBE,gBAAgB;MAChB,OAAO,KAAKH,2BAAL,CAAiCG,gBAAxC;IACH;;IAEmB,IAAhBA,gBAAgB,CAACF,KAAD,EAAM;MACtB;MACA,IAAI,KAAKF,kCAAT,EAA6C;QACzC,MAAMb,uBAAuB,EAA7B;MACH;;MAED,KAAKc,2BAAL,CAAiCG,gBAAjC,GAAoDF,KAApD;IACH;;IAEkB,IAAfC,eAAe;MACf,OAAO,KAAKF,2BAAL,CAAiCE,eAAxC;IACH;;EArDgF,CAArF;AAuDH,CAjEM","names":["createAudioDestinationNodeConstructor","audioNodeConstructor","createAudioDestinationNodeRenderer","createIndexSizeError","createInvalidStateError","createNativeAudioDestinationNode","getNativeContext","isNativeOfflineAudioContext","renderInputsOfAudioNode","AudioDestinationNode","constructor","context","channelCount","nativeContext","isOffline","nativeAudioDestinationNode","audioDestinationNodeRenderer","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","value","maxChannelCount","channelCountMode"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\audio-destination-node-constructor.ts"],"sourcesContent":["import { IAudioDestinationNode } from '../interfaces';\nimport {\n    TAudioDestinationNodeConstructorFactory,\n    TAudioNodeRenderer,\n    TChannelCountMode,\n    TContext,\n    TNativeAudioDestinationNode\n} from '../types';\n\nexport const createAudioDestinationNodeConstructor: TAudioDestinationNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioDestinationNodeRenderer,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    renderInputsOfAudioNode\n) => {\n    return class AudioDestinationNode<T extends TContext> extends audioNodeConstructor<T> implements IAudioDestinationNode<T> {\n        private _isNodeOfNativeOfflineAudioContext: boolean;\n\n        private _nativeAudioDestinationNode: TNativeAudioDestinationNode;\n\n        constructor(context: T, channelCount: number) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null)\n            );\n\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n\n        get channelCount(): number {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n\n        get maxChannelCount(): number {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}