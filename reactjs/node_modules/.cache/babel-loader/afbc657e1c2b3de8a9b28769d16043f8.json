{"ast":null,"code":"import { createBroker } from 'broker-factory';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\n\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const wrap = createBroker({\n  characterize: _ref => {\n    let {\n      call\n    } = _ref;\n    return () => call('characterize');\n  },\n  encode: _ref2 => {\n    let {\n      call\n    } = _ref2;\n    return (recordingId, timeslice) => {\n      return call('encode', {\n        recordingId,\n        timeslice\n      });\n    };\n  },\n  record: _ref3 => {\n    let {\n      call\n    } = _ref3;\n    return async (recordingId, sampleRate, typedArrays) => {\n      await call('record', {\n        recordingId,\n        sampleRate,\n        typedArrays\n      }, typedArrays.map(_ref4 => {\n        let {\n          buffer\n        } = _ref4;\n        return buffer;\n      }));\n    };\n  }\n});\nexport const load = url => {\n  const worker = new Worker(url);\n  return wrap(worker);\n};","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAKA;;;;;AAIA,cAAc,oBAAd;AACA,cAAc,eAAd;AAEA,OAAO,MAAMC,IAAI,GAAoDD,YAAY,CAG/E;EACEE,YAAY,EAAE,QAAa;IAAA,IAAZ;MAAEC;IAAF,CAAY;IACvB,OAAO,MAAMA,IAAI,CAAC,cAAD,CAAjB;EACH,CAHH;EAIEC,MAAM,EAAE,SAAa;IAAA,IAAZ;MAAED;IAAF,CAAY;IACjB,OAAO,CAACE,WAAD,EAAcC,SAAd,KAA2B;MAC9B,OAAOH,IAAI,CAAC,QAAD,EAAW;QAAEE,WAAF;QAAeC;MAAf,CAAX,CAAX;IACH,CAFD;EAGH,CARH;EASEC,MAAM,EAAE,SAAa;IAAA,IAAZ;MAAEJ;IAAF,CAAY;IACjB,OAAO,OAAOE,WAAP,EAAoBG,UAApB,EAAgCC,WAAhC,KAA+C;MAClD,MAAMN,IAAI,CACN,QADM,EAEN;QAAEE,WAAF;QAAeG,UAAf;QAA2BC;MAA3B,CAFM,EAGNA,WAAW,CAACC,GAAZ,CAAgB;QAAA,IAAC;UAAEC;QAAF,CAAD;QAAA,OAAgBA,MAAhB;MAAA,CAAhB,CAHM,CAAV;IAKH,CAND;EAOH;AAjBH,CAH+E,CAA1E;AAuBP,OAAO,MAAMC,IAAI,GAAoDC,GAAD,IAAgB;EAChF,MAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAWF,GAAX,CAAf;EAEA,OAAOZ,IAAI,CAACa,MAAD,CAAX;AACH,CAJM","names":["createBroker","wrap","characterize","call","encode","recordingId","timeslice","record","sampleRate","typedArrays","map","buffer","load","url","worker","Worker"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\extendable-media-recorder-wav-encoder-broker\\src\\module.ts"],"sourcesContent":["import { createBroker } from 'broker-factory';\nimport { TExtendableMediaRecorderWavEncoderWorkerDefinition } from 'extendable-media-recorder-wav-encoder-worker';\nimport { IExtendableMediaRecorderWavEncoderBrokerDefinition } from './interfaces';\nimport { TExtendableMediaRecorderWavEncoderBrokerLoader, TExtendableMediaRecorderWavEncoderBrokerWrapper } from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nexport const wrap: TExtendableMediaRecorderWavEncoderBrokerWrapper = createBroker<\n    IExtendableMediaRecorderWavEncoderBrokerDefinition,\n    TExtendableMediaRecorderWavEncoderWorkerDefinition\n>({\n    characterize: ({ call }) => {\n        return () => call('characterize');\n    },\n    encode: ({ call }) => {\n        return (recordingId, timeslice) => {\n            return call('encode', { recordingId, timeslice });\n        };\n    },\n    record: ({ call }) => {\n        return async (recordingId, sampleRate, typedArrays) => {\n            await call(\n                'record',\n                { recordingId, sampleRate, typedArrays },\n                typedArrays.map(({ buffer }) => buffer)\n            );\n        };\n    }\n});\n\nexport const load: TExtendableMediaRecorderWavEncoderBrokerLoader = (url: string) => {\n    const worker = new Worker(url);\n\n    return wrap(worker);\n};\n"]},"metadata":{},"sourceType":"module"}