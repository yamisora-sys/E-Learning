{"ast":null,"code":"export const createGetAudioNodeRenderer = getAudioNodeConnections => {\n  return audioNode => {\n    const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n    if (audioNodeConnections.renderer === null) {\n      throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n    }\n\n    return audioNodeConnections.renderer;\n  };\n};","map":{"version":3,"mappings":"AAGA,OAAO,MAAMA,0BAA0B,GAAkCC,uBAAD,IAA4B;EAChG,OACIC,SADG,IAEmC;IACtC,MAAMC,oBAAoB,GAAGF,uBAAuB,CAACC,SAAD,CAApD;;IAEA,IAAIC,oBAAoB,CAACC,QAArB,KAAkC,IAAtC,EAA4C;MACxC,MAAM,IAAIC,KAAJ,CAAU,iEAAV,CAAN;IACH;;IAED,OAA6CF,oBAAoB,CAACC,QAAlE;EACH,CAVD;AAWH,CAZM","names":["createGetAudioNodeRenderer","getAudioNodeConnections","audioNode","audioNodeConnections","renderer","Error"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\get-audio-node-renderer.ts"],"sourcesContent":["import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TGetAudioNodeRendererFactory } from '../types';\n\nexport const createGetAudioNodeRenderer: TGetAudioNodeRendererFactory = (getAudioNodeConnections) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        audioNode: IAudioNode<T>\n    ): IAudioNodeRenderer<T, IAudioNode<T>> => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n\n        return <IAudioNodeRenderer<T, IAudioNode<T>>>audioNodeConnections.renderer;\n    };\n};\n"]},"metadata":{},"sourceType":"module"}