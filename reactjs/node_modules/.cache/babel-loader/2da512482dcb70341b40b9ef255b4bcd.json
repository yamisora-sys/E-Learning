{"ast":null,"code":"const DEFAULT_OPTIONS = {\n  channelCount: 2,\n\n  /*\n   * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n   * behavior.\n   */\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class StereoPannerNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer() : null;\n      super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n      this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n    }\n\n    get pan() {\n      return this._pan;\n    }\n\n  };\n};","map":{"version":3,"mappings":"AAGA,MAAMA,eAAe,GAAG;EACpBC,YAAY,EAAE,CADM;;EAEpB;;;;EAIAC,gBAAgB,EAAE,UANE;EAOpBC,qBAAqB,EAAE,UAPH;EAQpBC,GAAG,EAAE;AARe,CAAxB;AAWA,OAAO,MAAMC,iCAAiC,GAAwC,CAClFC,oBADkF,EAElFC,gBAFkF,EAGlFC,4BAHkF,EAIlFC,8BAJkF,EAKlFC,gBALkF,EAMlFC,2BANkF,KAOlF;EACA,OAAO,MAAMC,gBAAN,SAAmDN,oBAAnD,CAA0E;IAG7EO,YAAYC,OAAZ,EAAwBC,OAAxB,EAA+D;MAC3D,MAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAD,CAAtC;MACA,MAAMG,aAAa,GAAG,EAAE,GAAGjB,eAAL;QAAsB,GAAGe;MAAzB,CAAtB;MACA,MAAMG,sBAAsB,GAAGV,4BAA4B,CAACQ,aAAD,EAAgBC,aAAhB,CAA3D;MACA,MAAME,SAAS,GAAGR,2BAA2B,CAACK,aAAD,CAA7C;MACA,MAAMI,wBAAwB,GAAiCD,SAAS,GAAGV,8BAA8B,EAAjC,GAAsC,IAA9G;MAEA,MAAMK,OAAN,EAAe,KAAf,EAAsBI,sBAAtB,EAA8CE,wBAA9C;MAEA,KAAKC,IAAL,GAAYd,gBAAgB,CAAC,IAAD,EAAOY,SAAP,EAAkBD,sBAAsB,CAACd,GAAzC,CAA5B;IACH;;IAEM,IAAHA,GAAG;MACH,OAAO,KAAKiB,IAAZ;IACH;;EAjB4E,CAAjF;AAmBH,CA3BM","names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","pan","createStereoPannerNodeConstructor","audioNodeConstructor","createAudioParam","createNativeStereoPannerNode","createStereoPannerNodeRenderer","getNativeContext","isNativeOfflineAudioContext","StereoPannerNode","constructor","context","options","nativeContext","mergedOptions","nativeStereoPannerNode","isOffline","stereoPannerNodeRenderer","_pan"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\stereo-panner-node-constructor.ts"],"sourcesContent":["import { IAudioParam, IStereoPannerNode, IStereoPannerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TStereoPannerNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n} as const;\n\nexport const createStereoPannerNodeConstructor: TStereoPannerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeStereoPannerNode,\n    createStereoPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class StereoPannerNode<T extends TContext> extends audioNodeConstructor<T> implements IStereoPannerNode<T> {\n        private _pan: IAudioParam;\n\n        constructor(context: T, options?: Partial<IStereoPannerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createStereoPannerNodeRenderer() : null);\n\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n\n        get pan(): IAudioParam {\n            return this._pan;\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}