{"ast":null,"code":"const handler = {\n  construct() {\n    return handler;\n  }\n\n};\nexport const isConstructible = constructible => {\n  try {\n    const proxy = new Proxy(constructible, handler);\n    new proxy(); // tslint:disable-line:no-unused-expression\n  } catch {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"mappings":"AAEA,MAAMA,OAAO,GAAG;EACZC,SAAS;IACL,OAAOD,OAAP;EACH;;AAHW,CAAhB;AAMA,OAAO,MAAME,eAAe,GAAIC,aAAD,IAAyC;EACpE,IAAI;IACA,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUF,aAAV,EAAyBH,OAAzB,CAAd;IAEA,IAAII,KAAJ,GAHA,CAGa;EAChB,CAJD,CAIE,MAAM;IACJ,OAAO,KAAP;EACH;;EAED,OAAO,IAAP;AACH,CAVM","names":["handler","construct","isConstructible","constructible","proxy","Proxy"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\helpers\\is-constructible.ts"],"sourcesContent":["import { TConstructor } from '../types';\n\nconst handler = {\n    construct(): any {\n        return handler;\n    }\n};\n\nexport const isConstructible = (constructible: TConstructor): boolean => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n\n        new proxy(); // tslint:disable-line:no-unused-expression\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n"]},"metadata":{},"sourceType":"module"}