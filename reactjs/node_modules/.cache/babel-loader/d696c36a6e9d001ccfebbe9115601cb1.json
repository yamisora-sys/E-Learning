{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n  const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n  assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n  assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n  return nativeBiquadFilterNode;\n};","map":{"version":3,"mappings":"AAAA,SAASA,oCAAT,QAAqD,uDAArD;AACA,SAASC,2BAAT,QAA4C,4CAA5C;AACA,SAASC,4BAAT,QAA6C,6CAA7C;AAGA,OAAO,MAAMC,4BAA4B,GAAmC,CAACC,aAAD,EAAgBC,OAAhB,KAA2B;EACnG,MAAMC,sBAAsB,GAAGF,aAAa,CAACG,kBAAd,EAA/B;EAEAL,4BAA4B,CAACI,sBAAD,EAAyBD,OAAzB,CAA5B;EAEAL,oCAAoC,CAACM,sBAAD,EAAyBD,OAAzB,EAAkC,GAAlC,CAApC;EACAL,oCAAoC,CAACM,sBAAD,EAAyBD,OAAzB,EAAkC,QAAlC,CAApC;EACAL,oCAAoC,CAACM,sBAAD,EAAyBD,OAAzB,EAAkC,WAAlC,CAApC;EACAL,oCAAoC,CAACM,sBAAD,EAAyBD,OAAzB,EAAkC,MAAlC,CAApC;EAEAJ,2BAA2B,CAACK,sBAAD,EAAyBD,OAAzB,EAAkC,MAAlC,CAA3B;EAEA,OAAOC,sBAAP;AACH,CAbM","names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOption","assignNativeAudioNodeOptions","createNativeBiquadFilterNode","nativeContext","options","nativeBiquadFilterNode","createBiquadFilter"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\native-biquad-filter-node.ts"],"sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeBiquadFilterNodeFactory } from '../types';\n\nexport const createNativeBiquadFilterNode: TNativeBiquadFilterNodeFactory = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n\n    return nativeBiquadFilterNode;\n};\n"]},"metadata":{},"sourceType":"module"}