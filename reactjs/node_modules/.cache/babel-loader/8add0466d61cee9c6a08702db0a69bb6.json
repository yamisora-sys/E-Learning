{"ast":null,"code":"export const createMapSubscribableThing = wrapSubscribeFunction => (subscribableThing, map) => wrapSubscribeFunction(observer => subscribableThing({ ...observer,\n  next: value => observer.next(map(value))\n}));","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,0BAA0B,GAClCC,qBAAD,IACA,CACIC,iBADJ,EAEIC,GAFJ,KAIIF,qBAAqB,CAAEG,QAAD,IAAcF,iBAAiB,CAAC,EAAE,GAAGE,QAAL;EAAeC,IAAI,EAAGC,KAAD,IAAWF,QAAQ,CAACC,IAAT,CAAcF,GAAG,CAACG,KAAD,CAAjB;AAAhC,CAAD,CAAhC,CANtB","names":["createMapSubscribableThing","wrapSubscribeFunction","subscribableThing","map","observer","next","value"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\subscribable-things\\src\\factories\\map-subscribable-thing.ts"],"sourcesContent":["import { TSubscribableThing, TWrapSubscribeFunctionFunction } from '../types';\n\nexport const createMapSubscribableThing =\n    (wrapSubscribeFunction: TWrapSubscribeFunctionFunction) =>\n    <TValue, TMappedValue>(\n        subscribableThing: TSubscribableThing<TValue>,\n        map: (value: TValue) => TMappedValue\n    ): TSubscribableThing<TMappedValue> =>\n        wrapSubscribeFunction((observer) => subscribableThing({ ...observer, next: (value) => observer.next(map(value)) }));\n"]},"metadata":{},"sourceType":"module"}