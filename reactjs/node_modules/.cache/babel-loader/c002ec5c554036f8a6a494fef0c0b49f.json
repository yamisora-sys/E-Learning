{"ast":null,"code":"import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n  return (nativeContext, options) => {\n    const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n    /*\n     * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n     * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n     * the webkitAudioContext is used as a workaround here.\n     */\n\n    if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n      wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n    }\n\n    assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n    return nativeChannelMergerNode;\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,4BAAT,QAA6C,6CAA7C;AAGA,OAAO,MAAMC,oCAAoC,GAA2C,CACxFC,6BADwF,EAExFC,qBAFwF,KAGxF;EACA,OAAO,CAACC,aAAD,EAAgBC,OAAhB,KAA2B;IAC9B,MAAMC,uBAAuB,GAAGF,aAAa,CAACG,mBAAd,CAAkCF,OAAO,CAACG,cAA1C,CAAhC;IAEA;;;;;;IAKA,IAAIN,6BAA6B,KAAK,IAAlC,IAA0CA,6BAA6B,CAACO,IAA9B,KAAuC,oBAArF,EAA2G;MACvGN,qBAAqB,CAACC,aAAD,EAAgBE,uBAAhB,CAArB;IACH;;IAEDN,4BAA4B,CAACM,uBAAD,EAA0BD,OAA1B,CAA5B;IAEA,OAAOC,uBAAP;EACH,CAfD;AAgBH,CApBM","names":["assignNativeAudioNodeOptions","createNativeChannelMergerNodeFactory","nativeAudioContextConstructor","wrapChannelMergerNode","nativeContext","options","nativeChannelMergerNode","createChannelMerger","numberOfInputs","name"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\native-channel-merger-node-factory.ts"],"sourcesContent":["import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeChannelMergerNodeFactoryFactory } from '../types';\n\nexport const createNativeChannelMergerNodeFactory: TNativeChannelMergerNodeFactoryFactory = (\n    nativeAudioContextConstructor,\n    wrapChannelMergerNode\n) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n\n        return nativeChannelMergerNode;\n    };\n};\n"]},"metadata":{},"sourceType":"module"}