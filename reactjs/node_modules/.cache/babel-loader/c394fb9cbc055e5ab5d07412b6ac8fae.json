{"ast":null,"code":"export const createListener = ongoingRequests => {\n  return _ref => {\n    let {\n      data: message\n    } = _ref;\n    const {\n      id\n    } = message;\n\n    if (id !== null) {\n      const ongoingRequest = ongoingRequests.get(id);\n\n      if (ongoingRequest !== undefined) {\n        const {\n          reject,\n          resolve\n        } = ongoingRequest;\n        ongoingRequests.delete(id);\n\n        if (message.error === undefined) {\n          resolve(message.result);\n        } else {\n          reject(new Error(message.error.message));\n        }\n      }\n    }\n  };\n};","map":{"version":3,"mappings":"AAGA,OAAO,MAAMA,cAAc,GAAIC,eAAD,IAA0E;EACpG,OAAO,QAAoC;IAAA,IAAnC;MAAEC,IAAI,EAAEC;IAAR,CAAmC;IACvC,MAAM;MAAEC;IAAF,IAASD,OAAf;;IAEA,IAAIC,EAAE,KAAK,IAAX,EAAiB;MACb,MAAMC,cAAc,GAAGJ,eAAe,CAACK,GAAhB,CAAoBF,EAApB,CAAvB;;MAEA,IAAIC,cAAc,KAAKE,SAAvB,EAAkC;QAC9B,MAAM;UAAEC,MAAF;UAAUC;QAAV,IAAsBJ,cAA5B;QAEAJ,eAAe,CAACS,MAAhB,CAAuBN,EAAvB;;QAEA,IAA0BD,OAAQ,CAACQ,KAAT,KAAmBJ,SAA7C,EAAwD;UACpDE,OAAO,CAAwBN,OAAQ,CAACS,MAAjC,CAAP;QACH,CAFD,MAEO;UACHJ,MAAM,CAAC,IAAIK,KAAJ,CAAgCV,OAAQ,CAACQ,KAAT,CAAeR,OAA/C,CAAD,CAAN;QACH;MACJ;IACJ;EACJ,CAlBD;AAmBH,CApBM","names":["createListener","ongoingRequests","data","message","id","ongoingRequest","get","undefined","reject","resolve","delete","error","result","Error"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\recorder-audio-worklet\\src\\factories\\listener.ts"],"sourcesContent":["import type { IWorkerEvent } from 'broker-factory';\nimport type { IWorkerErrorMessage, IWorkerResultMessage } from 'worker-factory';\n\nexport const createListener = (ongoingRequests: Map<number, { reject: Function; resolve: Function }>) => {\n    return ({ data: message }: IWorkerEvent) => {\n        const { id } = message;\n\n        if (id !== null) {\n            const ongoingRequest = ongoingRequests.get(id);\n\n            if (ongoingRequest !== undefined) {\n                const { reject, resolve } = ongoingRequest;\n\n                ongoingRequests.delete(id);\n\n                if ((<IWorkerErrorMessage>message).error === undefined) {\n                    resolve((<IWorkerResultMessage>message).result);\n                } else {\n                    reject(new Error((<IWorkerErrorMessage>message).error.message));\n                }\n            }\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}