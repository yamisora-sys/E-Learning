{"ast":null,"code":"import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, _ref, ignoreDuplicates) => {\n  let [source, output, eventListener] = _ref;\n  const passiveInputConnections = passiveInputs.get(source);\n\n  if (passiveInputConnections === undefined) {\n    passiveInputs.set(source, new Set([[output, eventListener]]));\n  } else {\n    insertElementInSet(passiveInputConnections, [output, eventListener], passiveInputConnection => passiveInputConnection[0] === output, ignoreDuplicates);\n  }\n};","map":{"version":3,"mappings":"AAEA,SAASA,kBAAT,QAAmC,yBAAnC;AAEA,OAAO,MAAMC,qCAAqC,GAAG,CACjDC,aADiD,QAGjDC,gBAHiD,KAIjD;EAAA,IAFA,CAACC,MAAD,EAASC,MAAT,EAAiBC,aAAjB,CAEA;EACA,MAAMC,uBAAuB,GAAGL,aAAa,CAACM,GAAd,CAAkBJ,MAAlB,CAAhC;;EAEA,IAAIG,uBAAuB,KAAKE,SAAhC,EAA2C;IACvCP,aAAa,CAACQ,GAAd,CAAkBN,MAAlB,EAA0B,IAAIO,GAAJ,CAAQ,CAAC,CAACN,MAAD,EAASC,aAAT,CAAD,CAAR,CAA1B;EACH,CAFD,MAEO;IACHN,kBAAkB,CACdO,uBADc,EAEd,CAACF,MAAD,EAASC,aAAT,CAFc,EAGbM,sBAAD,IAA4BA,sBAAsB,CAAC,CAAD,CAAtB,KAA8BP,MAH5C,EAIdF,gBAJc,CAAlB;EAMH;AACJ,CAjBM","names":["insertElementInSet","addPassiveInputConnectionToAudioParam","passiveInputs","ignoreDuplicates","source","output","eventListener","passiveInputConnections","get","undefined","set","Set","passiveInputConnection"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\helpers\\add-passive-input-connection-to-audio-param.ts"],"sourcesContent":["import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { insertElementInSet } from './insert-element-in-set';\n\nexport const addPassiveInputConnectionToAudioParam = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>,\n    [source, output, eventListener]: TActiveInputConnection<T>,\n    ignoreDuplicates: boolean\n) => {\n    const passiveInputConnections = passiveInputs.get(source);\n\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    } else {\n        insertElementInSet(\n            passiveInputConnections,\n            [output, eventListener],\n            (passiveInputConnection) => passiveInputConnection[0] === output,\n            ignoreDuplicates\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}