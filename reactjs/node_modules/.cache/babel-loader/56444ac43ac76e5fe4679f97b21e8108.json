{"ast":null,"code":"export const createResizes = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n  return (htmlElement, options) => wrapSubscribeFunction(observer => {\n    if (window === null || window.ResizeObserver === undefined) {\n      return emitNotSupportedError(observer);\n    }\n\n    const resizeObserver = new window.ResizeObserver(entries => observer.next(entries));\n\n    try {\n      resizeObserver.observe(htmlElement, options);\n    } catch (err) {\n      observer.error(err);\n    }\n\n    return () => resizeObserver.disconnect();\n  });\n};","map":{"version":3,"mappings":"AAGA,OAAO,MAAMA,aAAa,GAAoB,CAACC,qBAAD,EAAwBC,MAAxB,EAAgCC,qBAAhC,KAAyD;EACnG,OAAO,CAACC,WAAD,EAAcC,OAAd,KACHF,qBAAqB,CAAEG,QAAD,IAAa;IAC/B,IAAIJ,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACK,cAAP,KAA0BC,SAAjD,EAA4D;MACxD,OAAOP,qBAAqB,CAACK,QAAD,CAA5B;IACH;;IAED,MAAMG,cAAc,GAAG,IAAIP,MAAM,CAACK,cAAX,CAA2BG,OAAD,IAAaJ,QAAQ,CAACK,IAAT,CAAsCD,OAAtC,CAAvC,CAAvB;;IAEA,IAAI;MACAD,cAAc,CAACG,OAAf,CAAuBR,WAAvB,EAAoCC,OAApC;IACH,CAFD,CAEE,OAAOQ,GAAP,EAAY;MACVP,QAAQ,CAACQ,KAAT,CAAeD,GAAf;IACH;;IAED,OAAO,MAAMJ,cAAc,CAACM,UAAf,EAAb;EACH,CAdoB,CADzB;AAgBH,CAjBM","names":["createResizes","emitNotSupportedError","window","wrapSubscribeFunction","htmlElement","options","observer","ResizeObserver","undefined","resizeObserver","entries","next","observe","err","error","disconnect"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\subscribable-things\\src\\factories\\resizes.ts"],"sourcesContent":["import { IResizeObserverEntry } from '../interfaces';\nimport { TResizesFactory } from '../types';\n\nexport const createResizes: TResizesFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.ResizeObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const resizeObserver = new window.ResizeObserver((entries) => observer.next(<IResizeObserverEntry[]>entries));\n\n            try {\n                resizeObserver.observe(htmlElement, options);\n            } catch (err) {\n                observer.error(err);\n            }\n\n            return () => resizeObserver.disconnect();\n        });\n};\n"]},"metadata":{},"sourceType":"module"}