{"ast":null,"code":"export const createTestAudioContextCloseMethodSupport = nativeAudioContextConstructor => {\n  return () => {\n    if (nativeAudioContextConstructor === null) {\n      return false;\n    } // Try to check the prototype before constructing the AudioContext.\n\n\n    if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {\n      return true;\n    }\n\n    const audioContext = new nativeAudioContextConstructor();\n    const isAudioContextClosable = audioContext.close !== undefined;\n\n    try {\n      audioContext.close();\n    } catch {// Ignore errors.\n    }\n\n    return isAudioContextClosable;\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,wCAAwC,GAAgDC,6BAAD,IAAkC;EAClI,OAAO,MAAK;IACR,IAAIA,6BAA6B,KAAK,IAAtC,EAA4C;MACxC,OAAO,KAAP;IACH,CAHO,CAKR;;;IACA,IAAIA,6BAA6B,CAACC,SAA9B,KAA4CC,SAA5C,IAAyDF,6BAA6B,CAACC,SAA9B,CAAwCE,KAAxC,KAAkDD,SAA/G,EAA0H;MACtH,OAAO,IAAP;IACH;;IAED,MAAME,YAAY,GAAG,IAAIJ,6BAAJ,EAArB;IAEA,MAAMK,sBAAsB,GAAGD,YAAY,CAACD,KAAb,KAAuBD,SAAtD;;IAEA,IAAI;MACAE,YAAY,CAACD,KAAb;IACH,CAFD,CAEE,MAAM,CACJ;IACH;;IAED,OAAOE,sBAAP;EACH,CArBD;AAsBH,CAvBM","names":["createTestAudioContextCloseMethodSupport","nativeAudioContextConstructor","prototype","undefined","close","audioContext","isAudioContextClosable"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\test-audio-context-close-method-support.ts"],"sourcesContent":["import { TTestAudioContextCloseMethodSupportFactory } from '../types';\n\nexport const createTestAudioContextCloseMethodSupport: TTestAudioContextCloseMethodSupportFactory = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n\n        // Try to check the prototype before constructing the AudioContext.\n        if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {\n            return true;\n        }\n\n        const audioContext = new nativeAudioContextConstructor();\n\n        const isAudioContextClosable = audioContext.close !== undefined;\n\n        try {\n            audioContext.close();\n        } catch {\n            // Ignore errors.\n        }\n\n        return isAudioContextClosable;\n    };\n};\n"]},"metadata":{},"sourceType":"module"}