{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n  return (nativeContext, options) => {\n    // Bug #62: Safari does not support ConstantSourceNodes.\n    if (nativeContext.createConstantSource === undefined) {\n      return createNativeConstantSourceNodeFaker(nativeContext, options);\n    }\n\n    const nativeConstantSourceNode = nativeContext.createConstantSource();\n    assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset'); // Bug #44: Safari does not throw a RangeError yet.\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n    } // Bug #44: Only Firefox does not throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n    } // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n\n\n    addSilentConnection(nativeContext, nativeConstantSourceNode);\n    return nativeConstantSourceNode;\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,oCAAT,QAAqD,uDAArD;AACA,SAASC,4BAAT,QAA6C,6CAA7C;AACA,SAASC,yDAAT,QAA0E,8EAA1E;AACA,SAASC,wDAAT,QAAyE,6EAAzE;AAGA,OAAO,MAAMC,qCAAqC,GAA4C,CAC1FC,mBAD0F,EAE1FC,eAF0F,EAG1FC,mCAH0F,EAI1FC,gEAJ0F,EAK1FC,+DAL0F,KAM1F;EACA,OAAO,CAACC,aAAD,EAAgBC,OAAhB,KAA2B;IAC9B;IACA,IAAID,aAAa,CAACE,oBAAd,KAAuCC,SAA3C,EAAsD;MAClD,OAAON,mCAAmC,CAACG,aAAD,EAAgBC,OAAhB,CAA1C;IACH;;IAED,MAAMG,wBAAwB,GAAGJ,aAAa,CAACE,oBAAd,EAAjC;IAEAX,4BAA4B,CAACa,wBAAD,EAA2BH,OAA3B,CAA5B;IAEAX,oCAAoC,CAACc,wBAAD,EAA2BH,OAA3B,EAAoC,QAApC,CAApC,CAV8B,CAY9B;;IACA,IACI,CAACL,eAAe,CAACE,gEAAD,EAAmE,MAC/EA,gEAAgE,CAACE,aAAD,CADpD,CADpB,EAIE;MACER,yDAAyD,CAACY,wBAAD,CAAzD;IACH,CAnB6B,CAqB9B;;;IACA,IACI,CAACR,eAAe,CAACG,+DAAD,EAAkE,MAC9EA,+DAA+D,CAACC,aAAD,CADnD,CADpB,EAIE;MACEP,wDAAwD,CAACW,wBAAD,CAAxD;IACH,CA5B6B,CA8B9B;;;IACAT,mBAAmB,CAACK,aAAD,EAAgBI,wBAAhB,CAAnB;IAEA,OAAOA,wBAAP;EACH,CAlCD;AAmCH,CA1CM","names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOptions","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","createNativeConstantSourceNodeFactory","addSilentConnection","cacheTestResult","createNativeConstantSourceNodeFaker","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","nativeContext","options","createConstantSource","undefined","nativeConstantSourceNode"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\native-constant-source-node-factory.ts"],"sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeConstantSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeConstantSourceNodeFactory: TNativeConstantSourceNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    createNativeConstantSourceNodeFaker,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport\n) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n\n        return nativeConstantSourceNode;\n    };\n};\n"]},"metadata":{},"sourceType":"module"}