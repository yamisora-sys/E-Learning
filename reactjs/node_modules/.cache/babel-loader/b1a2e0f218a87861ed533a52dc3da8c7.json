{"ast":null,"code":"export const readVariableSizeIntegerLength = (dataView, offset) => {\n  if (offset >= dataView.byteLength) {\n    return null;\n  }\n\n  const byte = dataView.getUint8(offset);\n\n  if (byte > 127) {\n    return 1;\n  }\n\n  if (byte > 63) {\n    return 2;\n  }\n\n  if (byte > 31) {\n    return 3;\n  }\n\n  if (byte > 15) {\n    return 4;\n  }\n\n  if (byte > 7) {\n    return 5;\n  }\n\n  if (byte > 3) {\n    return 6;\n  }\n\n  if (byte > 1) {\n    return 7;\n  }\n\n  if (byte > 0) {\n    return 8;\n  }\n\n  const length = readVariableSizeIntegerLength(dataView, offset + 1);\n  return length === null ? null : length + 8;\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,6BAA6B,GAA2C,CAACC,QAAD,EAAWC,MAAX,KAAqB;EACtG,IAAIA,MAAM,IAAID,QAAQ,CAACE,UAAvB,EAAmC;IAC/B,OAAO,IAAP;EACH;;EAED,MAAMC,IAAI,GAAGH,QAAQ,CAACI,QAAT,CAAkBH,MAAlB,CAAb;;EAEA,IAAIE,IAAI,GAAG,GAAX,EAAgB;IACZ,OAAO,CAAP;EACH;;EAED,IAAIA,IAAI,GAAG,EAAX,EAAe;IACX,OAAO,CAAP;EACH;;EAED,IAAIA,IAAI,GAAG,EAAX,EAAe;IACX,OAAO,CAAP;EACH;;EAED,IAAIA,IAAI,GAAG,EAAX,EAAe;IACX,OAAO,CAAP;EACH;;EAED,IAAIA,IAAI,GAAG,CAAX,EAAc;IACV,OAAO,CAAP;EACH;;EAED,IAAIA,IAAI,GAAG,CAAX,EAAc;IACV,OAAO,CAAP;EACH;;EAED,IAAIA,IAAI,GAAG,CAAX,EAAc;IACV,OAAO,CAAP;EACH;;EAED,IAAIA,IAAI,GAAG,CAAX,EAAc;IACV,OAAO,CAAP;EACH;;EAED,MAAME,MAAM,GAAGN,6BAA6B,CAACC,QAAD,EAAWC,MAAM,GAAG,CAApB,CAA5C;EAEA,OAAOI,MAAM,KAAK,IAAX,GAAkB,IAAlB,GAAyBA,MAAM,GAAG,CAAzC;AACH,CA1CM","names":["readVariableSizeIntegerLength","dataView","offset","byteLength","byte","getUint8","length"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\extendable-media-recorder\\src\\functions\\read-variable-size-integer-length.ts"],"sourcesContent":["import { TReadVariableSizeIntegerLengthFunction } from '../types';\n\nexport const readVariableSizeIntegerLength: TReadVariableSizeIntegerLengthFunction = (dataView, offset) => {\n    if (offset >= dataView.byteLength) {\n        return null;\n    }\n\n    const byte = dataView.getUint8(offset);\n\n    if (byte > 127) {\n        return 1;\n    }\n\n    if (byte > 63) {\n        return 2;\n    }\n\n    if (byte > 31) {\n        return 3;\n    }\n\n    if (byte > 15) {\n        return 4;\n    }\n\n    if (byte > 7) {\n        return 5;\n    }\n\n    if (byte > 3) {\n        return 6;\n    }\n\n    if (byte > 1) {\n        return 7;\n    }\n\n    if (byte > 0) {\n        return 8;\n    }\n\n    const length = readVariableSizeIntegerLength(dataView, offset + 1);\n\n    return length === null ? null : length + 8;\n};\n"]},"metadata":{},"sourceType":"module"}