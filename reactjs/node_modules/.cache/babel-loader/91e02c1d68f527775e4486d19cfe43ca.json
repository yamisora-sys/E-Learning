{"ast":null,"code":"const DEFAULT_OPTIONS = {\n  disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n  return class PeriodicWave {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS,\n        ...options\n      });\n      const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n      periodicWaveStore.add(periodicWave); // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n\n      return periodicWave;\n    }\n\n    static [Symbol.hasInstance](instance) {\n      return instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype || periodicWaveStore.has(instance);\n    }\n\n  };\n};","map":{"version":3,"mappings":"AAGA,MAAMA,eAAe,GAAG;EACpBC,oBAAoB,EAAE;AADF,CAAxB;AAIA,OAAO,MAAMC,6BAA6B,GAAoC,CAC1EC,wBAD0E,EAE1EC,gBAF0E,EAG1EC,iBAH0E,EAI1EC,2BAJ0E,KAK1E;EACA,OAAO,MAAMC,YAAN,CAAkB;IACrBC,YAAYC,OAAZ,EAAwBC,OAAxB,EAA+D;MAC3D,MAAMC,aAAa,GAAGP,gBAAgB,CAACK,OAAD,CAAtC;MACA,MAAMG,aAAa,GAAGN,2BAA2B,CAAC,EAAE,GAAGN,eAAL;QAAsB,GAAGU;MAAzB,CAAD,CAAjD;MACA,MAAMG,YAAY,GAAGV,wBAAwB,CAACQ,aAAD,EAAgBC,aAAhB,CAA7C;MAEAP,iBAAiB,CAACS,GAAlB,CAAsBD,YAAtB,EAL2D,CAO3D;;MACA,OAAOA,YAAP;IACH;;IAEgC,QAAlBE,MAAM,CAACC,WAAW,EAAEC,QAAF,EAAmB;MAChD,OACKA,QAAQ,KAAK,IAAb,IAAqB,OAAOA,QAAP,KAAoB,QAAzC,IAAqDC,MAAM,CAACC,cAAP,CAAsBF,QAAtB,MAAoCV,YAAY,CAACa,SAAvG,IACAf,iBAAiB,CAACgB,GAAlB,CAA2BJ,QAA3B,CAFJ;IAIH;;EAjBoB,CAAzB;AAmBH,CAzBM","names":["DEFAULT_OPTIONS","disableNormalization","createPeriodicWaveConstructor","createNativePeriodicWave","getNativeContext","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","constructor","context","options","nativeContext","mergedOptions","periodicWave","add","Symbol","hasInstance","instance","Object","getPrototypeOf","prototype","has"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\standardized-audio-context\\src\\factories\\periodic-wave-constructor.ts"],"sourcesContent":["import { IPeriodicWave, IPeriodicWaveOptions } from '../interfaces';\nimport { TContext, TPeriodicWaveConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    disableNormalization: false\n} as const;\n\nexport const createPeriodicWaveConstructor: TPeriodicWaveConstructorFactory = (\n    createNativePeriodicWave,\n    getNativeContext,\n    periodicWaveStore,\n    sanitizePeriodicWaveOptions\n) => {\n    return class PeriodicWave<T extends TContext> implements IPeriodicWave {\n        constructor(context: T, options?: Partial<IPeriodicWaveOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n\n            periodicWaveStore.add(periodicWave);\n\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n\n        public static [Symbol.hasInstance](instance: unknown): boolean {\n            return (\n                (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(<any>instance)\n            );\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}