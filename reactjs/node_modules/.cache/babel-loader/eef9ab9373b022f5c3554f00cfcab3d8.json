{"ast":null,"code":"export const createMidiInputs = wrapSubscribeFunction => {\n  return midiAccess => wrapSubscribeFunction(observer => {\n    let midiInputs = Array.from(midiAccess.inputs.values());\n\n    const emitMidiInputs = () => {\n      const midiAccessInputs = midiAccess.inputs;\n\n      if (midiInputs.length !== midiAccessInputs.size || midiInputs.some(_ref => {\n        let {\n          id\n        } = _ref;\n        return !midiAccessInputs.has(id);\n      })) {\n        midiInputs = Array.from(midiAccessInputs.values());\n        observer.next(midiInputs);\n      }\n    };\n\n    observer.next(midiInputs);\n    midiAccess.addEventListener('statechange', emitMidiInputs);\n    return () => midiAccess.removeEventListener('statechange', emitMidiInputs);\n  });\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,gBAAgB,GAAwBC,qBAAD,IAA0B;EAC1E,OAAQC,UAAD,IACHD,qBAAqB,CAAEE,QAAD,IAAa;IAC/B,IAAIC,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWJ,UAAU,CAACK,MAAX,CAAkBC,MAAlB,EAAX,CAAjB;;IAEA,MAAMC,cAAc,GAAG,MAAK;MACxB,MAAMC,gBAAgB,GAAGR,UAAU,CAACK,MAApC;;MAEA,IAAIH,UAAU,CAACO,MAAX,KAAsBD,gBAAgB,CAACE,IAAvC,IAA+CR,UAAU,CAACS,IAAX,CAAgB;QAAA,IAAC;UAAEC;QAAF,CAAD;QAAA,OAAY,CAACJ,gBAAgB,CAACK,GAAjB,CAAqBD,EAArB,CAAb;MAAA,CAAhB,CAAnD,EAA2G;QACvGV,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWI,gBAAgB,CAACF,MAAjB,EAAX,CAAb;QAEAL,QAAQ,CAACa,IAAT,CAAcZ,UAAd;MACH;IACJ,CARD;;IAUAD,QAAQ,CAACa,IAAT,CAAcZ,UAAd;IACAF,UAAU,CAACe,gBAAX,CAA4B,aAA5B,EAA2CR,cAA3C;IAEA,OAAO,MAAMP,UAAU,CAACgB,mBAAX,CAA+B,aAA/B,EAA8CT,cAA9C,CAAb;EACH,CAjBoB,CADzB;AAmBH,CApBM","names":["createMidiInputs","wrapSubscribeFunction","midiAccess","observer","midiInputs","Array","from","inputs","values","emitMidiInputs","midiAccessInputs","length","size","some","id","has","next","addEventListener","removeEventListener"],"sources":["D:\\programer\\xampp\\htdocs\\E-Learning\\reactjs\\node_modules\\subscribable-things\\src\\factories\\midi-inputs.ts"],"sourcesContent":["import { TMidiInputsFactory } from '../types';\n\nexport const createMidiInputs: TMidiInputsFactory = (wrapSubscribeFunction) => {\n    return (midiAccess) =>\n        wrapSubscribeFunction((observer) => {\n            let midiInputs = Array.from(midiAccess.inputs.values());\n\n            const emitMidiInputs = () => {\n                const midiAccessInputs = midiAccess.inputs;\n\n                if (midiInputs.length !== midiAccessInputs.size || midiInputs.some(({ id }) => !midiAccessInputs.has(id))) {\n                    midiInputs = Array.from(midiAccessInputs.values());\n\n                    observer.next(midiInputs);\n                }\n            };\n\n            observer.next(midiInputs);\n            midiAccess.addEventListener('statechange', emitMidiInputs);\n\n            return () => midiAccess.removeEventListener('statechange', emitMidiInputs);\n        });\n};\n"]},"metadata":{},"sourceType":"module"}